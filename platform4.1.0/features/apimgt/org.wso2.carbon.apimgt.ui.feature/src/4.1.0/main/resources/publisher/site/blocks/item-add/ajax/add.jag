<%
include("/jagg/jagg.jag");

(function () {
    var mod, obj, result, username,
            action = request.getParameter("action"),
            site = require("/site/conf/site.json"),
            msg = require("/site/conf/ui-messages.jag");

    if(jagg.getUser() == null){
        print({
            error:true,
            message:'timeout'
        });
    }else{
        if (action === "addAPI" ||action === "updateAPI") {
            mod = jagg.module("api");
            var apiData = {};

            apiData.request = request;
            apiData.apiName = request.getParameter("name", "UTF-8");

            apiData.version = request.getParameter("version");
            apiData.description = request.getParameter("description","UTF-8");
            apiData.endpoint = request.getParameter("endpoint");
            apiData.sandbox = request.getParameter("sandbox");
            apiData.wsdl = request.getParameter("wsdl");
            apiData.wadl = request.getParameter("wadl");
            apiData.tags = request.getParameter("tags","UTF-8");
            apiData.tier = request.getParameter("tiersCollection");
            apiData.imageUrl = request.getFile("apiThumb");
            apiData.context = request.getParameter("context","UTF-8");
            apiData.bizOwner = request.getParameter("bizOwner","UTF-8");
            apiData.bizOwnerEmail = request.getParameter("bizOwnerMail","UTF-8");
            apiData.techOwner = request.getParameter("techOwner","UTF-8");
            apiData.techOwnerEmail = request.getParameter("techOwnerMail","UTF-8");
            apiData.visibility = request.getParameter("visibility");
            apiData.visibleRoles = request.getParameter("roles","UTF-8");
            apiData.endpointSecured = request.getParameter("endpointType");
            apiData.endpointUTUsername = request.getParameter("epUsername");
            apiData.endpointUTPassword = request.getParameter("epPassword");
            
            var resCount = new Array();
            if (request.getParameter("resourceCount") != null) {
                resCount = request.getParameter("resourceCount");
            }
            var uriTemplateArr = new Array();
            var uriMethodArr = new Array();
            var uriAuthMethodArr = new Array();
            if(resCount==0){
            uriTemplateArr.push(request.getParameter("uriTemplate-0"));
            uriMethodArr.push(request.getParameter("resourceMethod-0"));
            var authType=request.getParameter("resourceMethodAuthType-0");
            uriAuthMethodArr.push(authType);
            }else{
            for (var i = 0; i < resCount; i++) {
            uriTemplateArr.push(request.getParameter("uriTemplate-" +i));
            uriMethodArr.push(request.getParameter("resourceMethod-" +i));
            var authType=request.getParameter("resourceMethodAuthType-" +i);
            uriAuthMethodArr.push(authType);
            }
            }
            apiData.uriTemplateArr = uriTemplateArr;

            apiData.uriMethodArr = uriMethodArr;
            apiData.uriAuthMethodArr = uriAuthMethodArr;
            if(action === "addAPI"){
            apiData.provider= jagg.getUser().username;
            result = mod.addAPI(apiData);
            }else{
            apiData.provider= request.getParameter("provider");
            result = mod.updateAPI(apiData);
            }
            if (result.error==true) {
                obj = {
                    error:true,
                    message:result.message
                };
            } else {
                obj = {
                    error:false
                }
            }
            print(obj);

        } else if (action === "isContextExist") {
            mod = jagg.module("api");
            var context = request.getParameter("context");
            var oldContext = request.getParameter("oldContext");
            result = mod.isContextExist(context,oldContext);
            if (result.error) {
                obj = {
                    error:true,
                    message:msg.error.backendError(action)
                };
            } else {
                obj = {
                    error:false,
                    exist:result.exist
                }
            }

            print(obj);

        }else if (action === "isURLValid") {
            mod = jagg.module("api");
            var type = request.getParameter("type");
            var url = request.getParameter("url");
            result = mod.isURLValid(type,url);
            if (result.error) {
                obj = {
                    error:true,
                    message:msg.error.backendError(action)
                };
            } else {
                obj = {
                    error:false,
                    response:result.response
                }
            }

            print(obj);

        }

        else if (action === "getTiers") {
            mod = jagg.module("api");
            result = mod.getTiers();
            if (result.error) {
                obj = {
                    error:true,
                    message:msg.error.backendError(action)
                };
            } else {
                obj = {
                    error:false,
                    tiers:result.tiers
                }
            }

            print(obj);

        }
        else {
            print({
                      error:true,
                      message:msg.error.invalidAction(action)
                  });
        }
    }
}());
%>
