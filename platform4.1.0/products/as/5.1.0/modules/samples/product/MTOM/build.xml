<!--
  ~ Copyright 2005-2007 WSO2, Inc. (http://wso2.com)
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project default="build-all">

    <property name="wso2appserver.home" value="../../"/>
    <property name="carbon.home" value="${wso2appserver.home}"/>
    <property name="appserver.lib" value="${wso2appserver.home}/lib"/>
    <property name="repo.location" value="${wso2appserver.home}/repository/deployment/server"/>
    <property name="temp.dir" value="temp"/>
    <property name="classes" value="${temp.dir}/classes"/>
    <property name="src" value="src"/>
    <property name="gen.src" value="target/generated/src"/>
    <property name="services" value="services"/>
    <property name="setup" value="ROOT"/>
    <property name="repo.services" value="axis2services"/>
    <property name="repo.modules" value="axis2modules"/>
    
    <ant antfile="${wso2appserver.home}/bin/build.xml"/>

    <path id="axis2.class.path">
        <pathelement path="${java.class.path}"/>
        <fileset dir="${wso2appserver.home}">
            <include name="repository/lib/*.jar"/>
        </fileset>
    </path>

    <target name="init" depends="clean">

        <mkdir dir="${temp.dir}"/>
        <mkdir dir="${classes}"/>
        <mkdir dir="${services}"/>
        <mkdir dir="${gen.src}"/>
    </target>

    <target name="clean">
        <delete dir="${temp.dir}"/>
        <delete dir="${gen.src}"/>
    </target>

    <target name="generate-source" depends="init">
        <java classname="org.wso2.carbon.utils.codegen.CodegenHelper" fork="true">
            <arg value="./conf/codegen.xml"/>
            <classpath refid="axis2.class.path"/>
        </java>
    </target>

    <target name="compile-all" depends="generate-source">
        <javac debug="on" destdir="${classes}">
            <src path="${src}"/>
            <src path="${gen.src}"/>
            <classpath refid="axis2.class.path"/>
        </javac>
    </target>

    <target name="build-service" depends="compile-all">
        <property name="mtom.dir" value="${temp.dir}/mtom"/>
        <mkdir dir="${mtom.dir}"/>

        <mkdir dir="${mtom.dir}/META-INF"/>
        <copy file="conf/services.xml" tofile="${mtom.dir}/META-INF/services.xml"/>
        <copy file="wsdl/MTOMSample.wsdl" tofile="${mtom.dir}/META-INF/MTOMSample.wsdl"/>
        <copy file="wsdl/xmime.xsd" tofile="${mtom.dir}/META-INF/xmime.xsd"/>
        <copy toDir="${mtom.dir}">
            <fileset dir="${classes}">
                <include name="**/*.class"/>
            </fileset>
        </copy>

        <jar destfile="${services}/MTOMService.aar">
            <fileset dir="${mtom.dir}"/>
        </jar>
    </target>


    <target name="build-all" depends="build-service">
        <echo message="Copying the created aar files in to the repository"/>
        <copy toDir="${repo.location}/${repo.services}">
            <fileset dir="${services}">
                <include name="**/*.aar"/>
            </fileset>
        </copy>

        <!-- Create a local repository containing only the necessary modules -->
        <mkdir dir="repository/modules"/>
        <copy todir="repository/modules">
            <fileset dir="${repo.location}/${repo.modules}">
                <include name="addressing*.mar"/>
                <include name="*sandesha2*.mar"/>
                <include name="rampart*.mar"/>
                <include name="rahas*.mar"/>
            </fileset>
        </copy>
    </target>
</project>
