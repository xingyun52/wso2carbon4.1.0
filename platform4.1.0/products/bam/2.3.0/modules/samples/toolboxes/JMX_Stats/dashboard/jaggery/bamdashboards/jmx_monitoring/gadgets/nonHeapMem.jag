<%

	var time = request.getParameter('t');
	var result;
	var used = [];
	var init = [];
	var committed = [];
	var max=[];
	var __time = "time";
	var timeGroup = null;
	var len;
	var jqPlotXaxisLbl = null;
	var jqPlotAxisFormatString = null;
	var _tickInterval = null;
	var dataTable = null;
	var orderByQuery = null;
	var selectQuery = null;
	var timeBetweenQuery;


	function getCurrentDay(t){
		var date;
		var currentDate = new Date();
		var h= currentDate.getHours();
		var m= currentDate.getMinutes();
		var s= currentDate.getSeconds();
		var d = currentDate.getDate();
		var M = currentDate.getMonth()+1;
		var y = currentDate.getFullYear();
		h = formatTimeChunk(h); 
		m = formatTimeChunk(m);
		s = formatTimeChunk(s);	
		d = formatTimeChunk(d);	
		M = formatTimeChunk(M);
		if(t=="year"){
			date = y+"-"+M;
			}
		else if(t=="month"){
			date = y+"-"+M+"-"+d;		
		}
		else{
			date = y+"-"+M+"-"+d+" "+h+":"+m+":"+s;
		}
		return date;
	};
	function setFromdate(t){
		var _fromDate;
		var date = new Date();
		if(t=="month"){
			date.setDate(date.getDate()-30);//30days backward
			var y = date.getFullYear();
			var M = date.getMonth()+1;
			var d = date.getDate();	
			d = formatTimeChunk(d);	
			M = formatTimeChunk(M);
			_fromDate = y+"-"+M+"-"+d;
		}
		else if(t=="day"){
			date.setHours(date.getHours()-24);//24hours backward
			var y = date.getFullYear();
			var M = date.getMonth()+1;
			var d = date.getDate();
			var h = date.getHours();
			var m = date.getMinutes();
			var s = date.getSeconds();
			h = formatTimeChunk(h);
			m = formatTimeChunk(m);
			s = formatTimeChunk(s);	
			d = formatTimeChunk(d);	
			M = formatTimeChunk(M);
			_fromDate = y+"-"+M+"-"+d+" "+h+":"+m+":"+s;
		}
		else if(t=="hour"){
			date.setMinutes(date.getMinutes()-120);//120min
			var y = date.getFullYear();
			var M = date.getMonth()+1;
			var d = date.getDate();
			var h = date.getHours();
			var m = date.getMinutes();
			var s = date.getSeconds();
			h = formatTimeChunk(h);
			m = formatTimeChunk(m);
			s = formatTimeChunk(s);	
			d = formatTimeChunk(d);	
			M = formatTimeChunk(M);
			_fromDate = y+"-"+M+"-"+d+" "+h+":"+m+":"+s;
		} else {
			date.setMinutes(date.getMinutes()-30);//30min
			var y = date.getFullYear();
			var M = date.getMonth()+1;
			var d = date.getDate();
			var h = date.getHours();
			var m = date.getMinutes();
			var s = date.getSeconds();
			h = formatTimeChunk(h);
			m = formatTimeChunk(m);
			s = formatTimeChunk(s);
			d = formatTimeChunk(d);
			M = formatTimeChunk(M);
			_fromDate = y+"-"+M+"-"+d+" "+h+":"+m+":"+s;
		}
		return _fromDate;
	};

	if(time){
		if(time.toLowerCase() == "now"){
			dataTable = "JMX_DATA_TABLE";
			timeGroup = "minute";
			orderByQuery = "order by time DESC";
			//selectQuery = "time,non_heap_mem_committed as avg_non_heap_mem_committed, non_heap_mem_init as avg_non_heap_mem_init, non_heap_mem_max as avg_non_heap_mem_max, non_heap_mem_used as avg_non_heap_mem_used";
			selectQuery = "time,non_heap_mem_committed, non_heap_mem_init, non_heap_mem_max, non_heap_mem_used";
			jqPlotXaxisLbl = "Time";
			jqPlotAxisFormatString = "%Y %m %d  %H:%M:%S";
			_tickInterval = "3 minute";

			var toDate = getCurrentDay("now");
			var fromDate = setFromdate("now");
			//timeBetweenQuery = "time between '" + fromDate + "' and '" + toDate +"'";
			timeBetweenQuery = "time between '" + fromDate + "' and '" + toDate + "'";

		}
		if(time.toLowerCase() == "hour"){
			dataTable = "JMX_SUMMARY_PER_MINUTE";
			timeGroup = "minute";
			orderByQuery = "group by minute,hour,year,month,day,time order by year DESC ,month DESC,day DESC,hour DESC,minute DESC";
			selectQuery = "time, avg(avg_non_heap_mem_used) as avg_non_heap_mem_used,avg(avg_non_heap_mem_init) as avg_non_heap_mem_init,avg(avg_non_heap_mem_committed) as avg_non_heap_mem_committed,avg(avg_non_heap_mem_max) as avg_non_heap_mem_max";
			jqPlotXaxisLbl = "Minute";
			jqPlotAxisFormatString = "%b-%d %H:%M";
			_tickInterval = "5 minute";

			
			var toDate = getCurrentDay("hour");
			var fromDate = setFromdate("hour");
			//timeBetweenQuery = "time between '" + fromDate + "' and '" + toDate +"'";
			timeBetweenQuery = "time between '" + fromDate + "' and '" + toDate + "'";

		}
		else if(time.toLowerCase() == "day"){
			dataTable = "JMX_SUMMARY_PER_HOUR";
			timeGroup = "hour";
			orderByQuery = "group by hour,year,month,day,time order by year DESC ,month DESC,day DESC,hour DESC";
			selectQuery = "time, avg(avg_non_heap_mem_used) as avg_non_heap_mem_used,avg(avg_non_heap_mem_init) as avg_non_heap_mem_init,avg(avg_non_heap_mem_committed) as avg_non_heap_mem_committed,avg(avg_non_heap_mem_max) as avg_non_heap_mem_max";
			jqPlotXaxisLbl = "Hour";
			jqPlotAxisFormatString = "%b-%d %H:00";
			_tickInterval = "1 hour";
			

			var toDate = getCurrentDay("day");
			var fromDate = setFromdate("day");
			timeBetweenQuery = "time between '" + fromDate + "' and '" + toDate + "'";
		}
		else if(time.toLowerCase() == "month"){
			dataTable = "JMX_SUMMARY_PER_DAY";
			timeGroup = "day";
			orderByQuery = "group by year,month,day,time order by year DESC ,month DESC,day DESC";
			selectQuery = "time, avg(avg_non_heap_mem_used) as avg_non_heap_mem_used,avg(avg_non_heap_mem_init) as avg_non_heap_mem_init,avg(avg_non_heap_mem_committed) as avg_non_heap_mem_committed,avg(avg_non_heap_mem_max) as avg_non_heap_mem_max";

			jqPlotXaxisLbl = "Day";
			jqPlotAxisFormatString = "%b-%d";
			_tickInterval = "1 day";


			var toDate = getCurrentDay("month");
			var fromDate = setFromdate("month");
			timeBetweenQuery = "time between '" + fromDate + "' and '" + toDate + "'";

		}
		else{
			new Log().info("cannot select table");
		}
	}

	function QueryResults(q){
		var db = new Database("WSO2BAM_DATASOURCE");
		var result;
		try{
			result = db.query(q);
		}
		catch(e){
			print("<span style='color:#fff;font-weight:100;font-size:16px;'>No data available. Please visit our <a href='http://docs.wso2.org/wiki/display/BAM200/Service+Statistics+Toolbox' target='_blank' style='color:#FFFE89'>docs</a> to see how to configure JMX monitoring</span><br /><span style='color:#eee;font-size:11px;'> <b>Reason : </b>" + e +"</span>");
		}
		finally{
			db.close();
		}
		return result;
	}

	function convertDBResult(result, colx, coly) {
		var array = [];
		colx = colx.toLowerCase();
		coly = coly.toLowerCase();
		var colxUpperCase = colx.toUpperCase();
		var colyUpperCase = coly.toUpperCase();
		if(result){for (var i = 0; i < result.length; i++) {
			if(result[i][colx] != null && result[i][coly] != null){
				array.push([result[i][colx],parseFloat(result[i][coly])/1000000]);
			}
			else if(result[i][colxUpperCase] != null && result[i][colyUpperCase]  != null){
				array.push([result[i][colxUpperCase],parseFloat(result[i][colyUpperCase])/1000000]);
			}
			else{
				array = null;
			}
		}}
		return array;
    };

	function queryDataAllServers(){
		used = null;
		init = null;
		committed = null;
		var query = "select "+selectQuery+" from "+dataTable+" where " + timeBetweenQuery + " "+orderByQuery+"";
		var result = QueryResults(query);

		if(used){
			len = used.length-1;
		}
	};

	var scalingFactor=1024*1024;

	function convertResults(results, time){
        var i=0;
        var __used  = "NON_HEAP_MEM_USED";
	    var __init  = "NON_HEAP_MEM_INIT";
	    var __committed = "NON_HEAP_MEM_COMMITTED";
	    var __max   ="NON_HEAP_MEM_MAX";

	    if(time.toLowerCase() != "now"){
            __used  = "AVG_NON_HEAP_MEM_USED";
	        __init  = "AVG_NON_HEAP_MEM_INIT";
	        __committed = "AVG_NON_HEAP_MEM_COMMITTED";
	        __max   ="AVG_NON_HEAP_MEM_MAX";
	    }

        for(i=0;i<results.length;i++){
    	    used.push([results[i].TIME,(results[i][__used])/scalingFactor]);
    	    init.push([results[i].TIME,(results[i][__init])/scalingFactor]);
    	    committed.push([results[i].TIME,(results[i][__committed])/scalingFactor]);
    	    max.push([results[i].TIME,(results[i][__max])/scalingFactor]);
        }
    }

	function formatTimeChunk(t){
		if (t<10){
  			t="0" + t;
		}
		return t;
	}

	if(dataTable){
	    var query = "select "+selectQuery+" from "+dataTable+" where " + timeBetweenQuery + " "+orderByQuery+"";
    	var dbResults = QueryResults(query);

	    var used=[];
        var init=[];
        var committed=[];
        var max=[];
	}

	convertResults(dbResults, time);
%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<link rel="stylesheet" type="text/css" href="../jqPlot/jquery.jqplot.min.css" />
    <style type="text/css">
        .jqplot-target {
                    margin: 20px;
                    height: 380px;
                    width: 80%;
                    color:#fff;
                }

                .ui-widget-content {
                    background: rgb(57,57,57);
                }

                table.jqplot-table-legend {
                    border: 0px;
                    background-color: rgba(100,100,100, 0.0);
                    width:20%;
                    color: #fff;
                }

                .jqplot-highlighter-tooltip {
                    background-color: rgba(57,57,57, 0.9);
                    padding: 7px;
                    color: #fff;
                }
body{
font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
}

    </style>
</head>
<body>
<div id="errorInfo"></div>
<%
if(used){
	if(typeof used[0] !== 'undefined' && used[0] !== null){
%>
<div class="ui-widget ui-corner-all">
        <div class="ui-widget-content ui-corner-bottom" >
            <div id="dashboard-multiline-gadget"></div>
        </div>
    </div>
<%
}}
%>


<script type="text/javascript" src="../scripts/jquery-1.7.2.min.js"></script>
<script type="text/javascript" src="../jqPlot/jquery.jqplot.min.js"></script>
<script class="include" type="text/javascript" src="../jqPlot/plugins/jqplot.dateAxisRenderer.min.js"></script>
<script class="include" type="text/javascript" src="../jqPlot/plugins/jqplot.logAxisRenderer.min.js"></script>
<script class="include" type="text/javascript" src="../jqPlot/plugins/jqplot.canvasTextRenderer.min.js"></script>
<script class="include" type="text/javascript" src="../jqPlot/plugins/jqplot.canvasAxisTickRenderer.min.js"></script>
<script class="include" type="text/javascript" src="../jqPlot/plugins/jqplot.highlighter.min.js"></script>
<script class="include" type="text/javascript" src="../jqPlot/plugins/jqplot.cursor.min.js"></script>
<script class="include" type="text/javascript" src="../jqPlot/plugins/jqplot.enhancedLegendRenderer.js"></script>
<script type="text/javascript" src="../scripts/date.js"></script>
<link rel="stylesheet" type="text/css" href="../css/bam-dashboard-common-styles.css" />
<script type="text/javascript">
    $(document).ready(function () {
            $.jqplot._noToImageButton = true;
            var usedMemLine=<%=used%>;
     		var initMemLine=<%=init%>;
     		var committedMemLine=<%=committed%>;
     		var maxMemLine=<%=max%>;
		var axisXTicks = [];

	var yMax = 0;
	var maxValue = Math.max(
		Math.max.apply(Math,initMemLine.map(function(o){return o[1];})),
		Math.max.apply(Math,committedMemLine.map(function(o){return o[1];})),
		Math.max.apply(Math,maxMemLine.map(function(o){return o[1];})),
		Math.max.apply(Math,usedMemLine.map(function(o){return o[1];})));

	if(isFinite(maxValue)){
		for(var i = 100; i < 1000000000 ; i){
			if(maxValue<i){
				var y = i/10;
				maxValue = Math.ceil(maxValue/y)*y;
				break;
			}
			i = i*10;
		}
		yMax = maxValue;
	}

	var lblXaxis = "<%=jqPlotXaxisLbl%>";

    var _timeGroup = "<%=time.toLowerCase()%>";


	var graphMaxValue;
	var graphMinValue;
	if(typeof usedMemLine[0] !== 'undefined' && usedMemLine[0] !== null){
		graphMinValue = ""+usedMemLine[usedMemLine.length-1][0]+"";
		if(usedMemLine.length==0){
			graphMinValue = ""+usedMemLine[0][0]+"";
		}
		graphMaxValue = ""+usedMemLine[0][0]+"";
		if(_timeGroup == "now"){
			graphMaxValue = Date.parse(graphMaxValue, "yyyy-MM-dd HH:mm:ss").add({ minutes: 1 });
			graphMinValue = Date.parse(graphMinValue, "yyyy-MM-dd HH:mm:ss").add({ minutes: -1 });
		}
		if(_timeGroup == "hour"){
			graphMaxValue = Date.parse(graphMaxValue, "yyyy-MM-dd HH:mm:ss").add({ minutes: 1 });
			graphMinValue = Date.parse(graphMinValue, "yyyy-MM-dd HH:mm:ss").add({ minutes: -1 });
		}
		if(_timeGroup == "day"){
			graphMaxValue = Date.parse(graphMaxValue, "yyyy-MM-dd HH:mm:ss").add({ hours: 1 });
			graphMinValue = Date.parse(graphMinValue, "yyyy-MM-dd HH:mm:ss").add({ hours: -1 });
		}
		if(_timeGroup == "month"){
			graphMaxValue = Date.parse(graphMaxValue, "yyyy-MM-dd").add({ days: 1 });
			graphMinValue = Date.parse(graphMinValue, "yyyy-MM-dd").add({ days: -1 });
		}
        		var xaxisLblFormat = "<%=jqPlotAxisFormatString%>";
        		var jqtickInterval = "<%=_tickInterval%>";
            	var plot1 = $.jqplot("dashboard-multiline-gadget", [usedMemLine,initMemLine,committedMemLine,maxMemLine], {
                seriesColors: ["#81B2FF", "#FFFF96","#FB8383","#BC1C0B"],
                title: 'Non-Heap Memory Usage',
                highlighter: {
                    show: true,
                    sizeAdjust: 1,
                    tooltipOffset: 9,
			tooltipLocation: 'ne'
                },
                grid: {
                    background: 'rgba(57,57,57,0.0)',
                    drawBorder: false,
                    shadow: false,
                    gridLineColor: '#666666',
                    gridLineWidth: 2
                },
                legend: {
			renderer: $.jqplot.EnhancedLegendRenderer,
                    show: true,
                    placement: 'outside'
                },
                seriesDefaults: {
                    rendererOptions: {
                        animation: {
                            show: true
                        }
                    },
                    showMarker: false
                },
                series: [
                    {
                        label: 'Used',
			markerOptions: { size: 10,style:'filledCircle'}

                    },
			{
			lineWidth:3,
                        label: 'Init',markerOptions: { size: 10,style:'filledCircle'}

                    },
                    {
			lineWidth:3,
                        label: 'Committed',markerOptions: { size: 10,style:'filledCircle'}

                    },
                    {
			lineWidth:3,
                        label: 'Max',markerOptions: { size: 10,style:'filledCircle'}
                    }
                ],
                axesDefaults: {
                    rendererOptions: {
                        baselineWidth: 1.5,
                        baselineColor: '#FFFFFF',
                        drawBaseline: false
                    },
                    labelRenderer: $.jqplot.CanvasAxisLabelRenderer
                },
                axes: {
                    xaxis: {
			label:lblXaxis,
                        renderer:jQuery.jqplot.DateAxisRenderer,
			tickRenderer: $.jqplot.CanvasAxisTickRenderer,
			min:graphMinValue,
            max:graphMaxValue,
			drawMajorGridlines: false,
			//ticks:axisXTicks,
            tickInterval: jqtickInterval,
                        tickOptions:{formatString:xaxisLblFormat,angle: -60,textColor: '#ffffff'}
                    },
                    yaxis: {
                        min:0,
			max:yMax,
			label:'Memory (MB)',
			numberTicks:6,
                        tickOptions: {
                            showMark: true,formatString:'%d'
                        }
                    }
                },
		cursor: {
            		show: true,
            		zoom: true
            		//showTooltip: false
        	}
            });

	}
	else{
	$("#errorInfo").html("<span style='color:#fff;font-weight:100;font-size:16px;'>No data available. Please visit our <a href='http://docs.wso2.org/wiki/display/BAM200/Service+Statistics+Toolbox' target='_blank' style='color:#FFFE89'>docs</a> to see how to configure JMX monitoring</span>")
	}


              $('.jqplot-highlighter-tooltip').addClass('ui-corner-all')
        });
    </script>
</body>
</html>
