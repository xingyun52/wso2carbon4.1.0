CREATE EXTERNAL TABLE IF NOT EXISTS HttpLogTable 
	(logId STRING, log STRING,  version STRING) 
	STORED BY 'org.apache.hadoop.hive.cassandra.CassandraStorageHandler'
	WITH SERDEPROPERTIES ( 
	"cassandra.host" = "127.0.0.1" , 
	"cassandra.port" = "9160" , 
	"cassandra.ks.name" = "EVENT_KS" , 
	"cassandra.ks.username" = "admin" , 
	"cassandra.ks.password" = "admin" , 
	"cassandra.cf.name" = "org_wso2_sample_httpd_logs" , 
	"cassandra.columns.mapping" = ":key,payload_log, Version" );
CREATE EXTERNAL TABLE IF NOT EXISTS ProcessedLogs (
	logId STRING,remote_ip STRING,
	request_date STRING,request STRING,
	httpCode STRING,length STRING,
	version STRING)
	STORED BY 'org.apache.hadoop.hive.cassandra.CassandraStorageHandler' 
	WITH SERDEPROPERTIES ( 
	"cassandra.host" = "127.0.0.1" , 
	"cassandra.port" = "9160" , 
	"cassandra.ks.name" = "EVENT_KS" , 
	"cassandra.ks.username" = "admin" , 
	"cassandra.ks.password" = "admin" , 
	"cassandra.cf.name" = "processed_logs" , 
	"cassandra.columns.mapping" = 
	":key,remote_ip, request_date, request,httpCode,length, version" );
insert overwrite table  ProcessedLogs 
	select logId, split(log, "\\s")[0],
	split(log, "\\s")[3], split(log, "\\s")[6], 
	split(log, "\\s")[8],split(log, "\\s")[9], version 
	from HttpLogTable;
set hive.aux.jars.path=file://${CARBON_HOME}/repository/components/lib/CustomUDF_Country.jar;  
create temporary function getCountryName as 'org.wso2.carbon.bam.country.mapping.IPCountryNameMap';
create temporary function getCountryCode as 'org.wso2.carbon.bam.country.mapping.IPCountryCodeMap';  
CREATE EXTERNAL TABLE IF NOT EXISTS CountrySummary(
	country STRING, countryCode STRING,  requestCount INT) 
	STORED BY 'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler' 
	TBLPROPERTIES ( 
	'mapred.jdbc.driver.class' = 'org.h2.Driver' , 
	'mapred.jdbc.url' = 'jdbc:h2:repository/database/samples/WSO2CARBON_DB;AUTO_SERVER=TRUE' , 
	'mapred.jdbc.username' = 'wso2carbon' , 
	'mapred.jdbc.password' = 'wso2carbon' , 
	'hive.jdbc.update.on.duplicate' = 'true' , 
	'hive.jdbc.primary.key.fields' = 'country' , 
	'hive.jdbc.table.create.query' = 
	'CREATE TABLE CountrySummary (country VARCHAR(100) NOT NULL PRIMARY KEY, 
	countryCode VARCHAR(20), requestCount  INT)' );
insert overwrite table CountrySummary 
	select countryName,countryCode,req_count From 
	(select CAST(getCountryName(remote_ip) As STRING) as countryName, 
	CAST(getCountryCode(remote_ip) As STRING) as countryCode, 
	count(DISTINCT logId) as req_count from ProcessedLogs  
	where version="1.0.0" group by getCountryName(remote_ip), getCountryCode(remote_ip))tmp SORT BY req_count DESC;          
