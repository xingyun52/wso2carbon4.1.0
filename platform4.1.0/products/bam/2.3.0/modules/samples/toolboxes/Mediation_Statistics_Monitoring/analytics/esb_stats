CREATE EXTERNAL TABLE IF NOT EXISTS EsbMediationStats (key STRING, resource_name STRING,resource_type STRING,
payload_count INT,direction STRING,fault_count INT, avg_processing_time DOUBLE,max_processing_time BIGINT, min_processing_time BIGINT,
payload_timestamp BIGINT,host STRING) STORED BY 
'org.apache.hadoop.hive.cassandra.CassandraStorageHandler' WITH SERDEPROPERTIES ( "cassandra.host" = "127.0.0.1",
"cassandra.port" = "9160","cassandra.ks.name" = "EVENT_KS",
"cassandra.ks.username" = "admin","cassandra.ks.password" = "admin",
"cassandra.cf.name" = "bam_mediation_stats_data_publisher",
"cassandra.columns.mapping" = ":key,payload_resource_id,payload_stats_type,payload_count,payload_direction,payload_fault_count, payload_avg_processing_time,payload_max_processing_time, payload_min_processing_time,payload_timestamp,meta_host" ); 



CREATE EXTERNAL TABLE IF NOT EXISTS EsbMediationStatsPerMinute(host STRING, resource_name STRING, resource_type STRING, total_count INT,
total_fault_count INT, direction STRING, avg_response_time DOUBLE,max_response_time BIGINT,min_response_time BIGINT, year SMALLINT,month SMALLINT,day SMALLINT,hour SMALLINT,minute SMALLINT, time STRING) 
STORED BY 'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler' TBLPROPERTIES ( 
'wso2.carbon.datasource.name'='WSO2BAM_DATASOURCE',
'hive.jdbc.update.on.duplicate' = 'true',
'hive.jdbc.primary.key.fields' = 'host,resource_name,resource_type,direction,year,month,day,hour,minute',
'hive.jdbc.table.create.query' = 'CREATE TABLE MEDIATION_STATS_SUMMARY_PER_MINUTE ( host VARCHAR(100) NOT NULL, resource_name VARCHAR(150),resource_type VARCHAR(150), total_count INT,total_fault_count INT,
direction VARCHAR(10),avg_response_time DOUBLE,max_response_time BIGINT,min_response_time BIGINT, year SMALLINT, month SMALLINT, day SMALLINT, hour SMALLINT, minute SMALLINT, time VARCHAR(30))' );
                                  


insert overwrite table EsbMediationStatsPerMinute select host, resource_name, resource_type, sum(payload_count) as total_count,sum(fault_count) as total_fault_count,direction, sum(avg_processing_time*payload_count)/sum(payload_count) as avg_processing_time, max(max_processing_time) as max_processing_time, min (min_processing_time) as min_processing_time,  year(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )) as year, month(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )) as month,day(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )) as day,hour(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )) as hour, minute(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )) as minute,concat(substring(from_unixtime(cast(payload_timestamp/1000 as BIGINT), 'yyyy-MM-dd HH:mm:ss'),0,16),':00') as time from EsbMediationStats  group by resource_name, resource_type,direction,host,year(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )), month(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )),day(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )),hour(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )),minute(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )),substring(from_unixtime(cast(payload_timestamp/1000 as BIGINT), 'yyyy-MM-dd HH:mm:ss'),0,16);



CREATE EXTERNAL TABLE IF NOT EXISTS ESBMediationStatsPerMinuteDataFetcher (host STRING, resource_name STRING, resource_type STRING, total_count INT, total_fault_count INT, direction STRING, avg_response_time DOUBLE,max_response_time BIGINT,min_response_time BIGINT, year SMALLINT,month SMALLINT,day SMALLINT,hour SMALLINT, time STRING) 
STORED BY 'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler' TBLPROPERTIES ( 
'wso2.carbon.datasource.name'='WSO2BAM_DATASOURCE',
'mapred.jdbc.input.table.name' = 'MEDIATION_STATS_SUMMARY_PER_MINUTE' );


CREATE EXTERNAL TABLE IF NOT EXISTS EsbMediationStatsPerHour (host STRING, resource_name STRING, resource_type STRING, total_count INT,total_fault_count INT, direction STRING, avg_response_time DOUBLE, max_response_time BIGINT, min_response_time BIGINT, year SMALLINT,month SMALLINT,day SMALLINT,hour SMALLINT, time STRING) 
STORED BY 'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler' TBLPROPERTIES ( 
'wso2.carbon.datasource.name'='WSO2BAM_DATASOURCE',
'hive.jdbc.update.on.duplicate' = 'true',
'hive.jdbc.primary.key.fields' = 'host,resource_name,resource_type,direction,year,month,day,hour',
'hive.jdbc.table.create.query' = 'CREATE TABLE MEDIATION_STATS_SUMMARY_PER_HOUR ( host VARCHAR(100) NOT NULL, resource_name VARCHAR(150),resource_type VARCHAR(150), total_count INT,total_fault_count INT,
direction VARCHAR(10),avg_response_time DOUBLE,max_response_time BIGINT,min_response_time BIGINT, year SMALLINT, month SMALLINT, day SMALLINT, hour SMALLINT, time VARCHAR(30))');


insert overwrite table EsbMediationStatsPerHour select host, resource_name, resource_type, sum(total_count) as total_count, sum(total_fault_count) as total_fault_count,direction,sum(total_count*avg_response_time)/sum(total_count) as avg_response_time, max(max_response_time) as max_response_time, min(min_response_time) as min_response_time, year, month, day,hour,concat(substr(time,0,13),':00:00') as time from ESBMediationStatsPerMinuteDataFetcher group by host, resource_name, resource_type,direction,year, month,day,hour,substr(time,0,13);


CREATE EXTERNAL TABLE IF NOT EXISTS EsbMediationStatsPerHourDataFetcher (host STRING, resource_name STRING, resource_type STRING, total_count INT, total_fault_count INT, direction STRING, avg_response_time DOUBLE,max_response_time BIGINT,min_response_time BIGINT, year SMALLINT,month SMALLINT,day SMALLINT,hour SMALLINT, time STRING) 
STORED BY 'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler' TBLPROPERTIES ( 
'wso2.carbon.datasource.name'='WSO2BAM_DATASOURCE',
'mapred.jdbc.input.table.name' = 'MEDIATION_STATS_SUMMARY_PER_HOUR' );

CREATE EXTERNAL TABLE IF NOT EXISTS EsbMediationStatsPerDay (host STRING, resource_name STRING, resource_type STRING, total_count INT, total_fault_count INT, direction STRING, avg_response_time DOUBLE,max_response_time BIGINT,min_response_time BIGINT, year SMALLINT,month SMALLINT,day SMALLINT, time STRING) 
STORED BY 'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler' TBLPROPERTIES ( 
'wso2.carbon.datasource.name'='WSO2BAM_DATASOURCE',
'hive.jdbc.update.on.duplicate' = 'true',
'hive.jdbc.primary.key.fields' = 'host,resource_name,resource_type,direction,year,month,day',
'hive.jdbc.table.create.query' = 'CREATE TABLE MEDIATION_STATS_SUMMARY_PER_DAY ( host VARCHAR(100) NOT NULL, resource_name VARCHAR(150),resource_type VARCHAR(150), total_count INT,total_fault_count INT,
direction VARCHAR(10),avg_response_time DOUBLE,max_response_time BIGINT,min_response_time BIGINT, year SMALLINT, month SMALLINT, day SMALLINT, time VARCHAR(30))' );


insert overwrite table EsbMediationStatsPerDay select host, resource_name, resource_type, sum(total_count) as total_count, sum(total_fault_count) as total_fault_count,direction,sum(total_count*avg_response_time)/sum(total_count) as avg_response_time, max(max_response_time) as max_response_time, min(min_response_time) as min_response_time, year, month, day ,substr(time,0,10) as time from ESBMediationStatsPerHourDataFetcher group by host, resource_name, resource_type,direction,year, month,day,substr(time,0,10);



CREATE EXTERNAL TABLE IF NOT EXISTS EsbMediationStatsPerDayDataFetcher (host STRING, resource_name STRING, resource_type STRING, total_count INT, total_fault_count INT, direction STRING, avg_response_time DOUBLE,max_response_time BIGINT,min_response_time BIGINT, year SMALLINT,month SMALLINT,day SMALLINT, time STRING) 
STORED BY 'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler' TBLPROPERTIES ( 
'wso2.carbon.datasource.name'='WSO2BAM_DATASOURCE',
'mapred.jdbc.input.table.name' = 'MEDIATION_STATS_SUMMARY_PER_DAY' );



CREATE EXTERNAL TABLE IF NOT EXISTS EsbMediationStatsPerMonth (host STRING, resource_name STRING, resource_type STRING, total_count INT, total_fault_count INT, direction STRING, avg_response_time DOUBLE,max_response_time BIGINT,min_response_time BIGINT, year SMALLINT,month SMALLINT, time STRING) 
STORED BY 'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler' TBLPROPERTIES ( 
'wso2.carbon.datasource.name'='WSO2BAM_DATASOURCE',
'hive.jdbc.update.on.duplicate' = 'true',
'hive.jdbc.primary.key.fields' = 'host,resource_name,resource_type,direction,year,month',
'hive.jdbc.table.create.query' = 'CREATE TABLE MEDIATION_STATS_SUMMARY_PER_MONTH ( host VARCHAR(100) NOT NULL, resource_name VARCHAR(150),resource_type VARCHAR(150), total_count INT,total_fault_count INT,
direction VARCHAR(10),avg_response_time DOUBLE,max_response_time BIGINT,min_response_time BIGINT, year SMALLINT, month SMALLINT, time VARCHAR(30))' );

insert overwrite table EsbMediationStatsPerMonth select host, resource_name, resource_type, sum(total_count) as total_count, sum(total_fault_count) as total_fault_count,direction,sum(total_count*avg_response_time)/sum(total_count) as avg_response_time, max(max_response_time) as max_response_time, min(min_response_time) as min_response_time, year, month ,substr(time,0,7) as time from EsbMediationStatsPerDayDataFetcher group by host, resource_name, resource_type,direction,year, month,substr(time,0,7);

 






   
