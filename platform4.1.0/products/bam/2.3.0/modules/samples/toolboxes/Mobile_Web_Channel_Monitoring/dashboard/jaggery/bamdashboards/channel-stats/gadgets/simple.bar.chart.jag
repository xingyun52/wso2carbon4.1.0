<%
	var server = request.getParameter('server');
	var service = request.getParameter('service');
	var operation = request.getParameter('opr');
	var time = request.getParameter('t');
	//var results;
	var axisX = "time";
	var axisY = "avg_response_time";
	var axisData = null;
	//var axisYData = null;
	var dataTable = null;
	//var timeGroup = null;
	var orderByQuery = null;
	var selectQuery = null;
	var jqPlotXaxisLbl = null;
	var jqPlotAxisFormatString = null;
	var _tickInterval = null;
	var timeBetweenQuery;
	 
	function getCurrentDay(t){
		var date;
		var currentDate = new Date();
		var h= currentDate.getHours();
		var m= currentDate.getMinutes();
		var s= currentDate.getSeconds();
		var d = currentDate.getDate();
		var M = currentDate.getMonth()+1;
		var y = currentDate.getFullYear(); 
		h = formatTimeChunk(h);
		m = formatTimeChunk(m);
		s = formatTimeChunk(s);	
		d = formatTimeChunk(d);	
		M = formatTimeChunk(M);
		if(t=="year"){
			date = y+"-"+M;
			}
		else if(t=="month"){
			date = y+"-"+M+"-"+d;		
		}
		else{
			date = y+"-"+M+"-"+d+" "+h+":"+m+":"+s;
		}
		return date;
	};
	function setFromdate(t){
		var _fromDate;
		var date = new Date();
		if(t=="year"){
			date.setMonth(date.getMonth()-60);//60months backward
			var y = date.getFullYear();
			var M = date.getMonth()+1;
			M = formatTimeChunk(M);
			_fromDate = y+"-"+M;
		}
		else if(t=="month"){
			date.setDate(date.getDate()-30);//30days backward
			var y = date.getFullYear();
			var M = date.getMonth()+1;
			var d = date.getDate();
			d = formatTimeChunk(d);	
			M = formatTimeChunk(M);
			_fromDate = y+"-"+M+"-"+d;
		}
		else if(t=="day"){
			date.setHours(date.getHours()-24);//24hours backward
			var y = date.getFullYear();
			var M = date.getMonth()+1;
			var d = date.getDate();
			var h = date.getHours();
			var m = date.getMinutes();
			var s = date.getSeconds();
			h = formatTimeChunk(h);
			m = formatTimeChunk(m);
			s = formatTimeChunk(s);	
			d = formatTimeChunk(d);	
			M = formatTimeChunk(M);
			_fromDate = y+"-"+M+"-"+d+" "+h+":"+m+":"+s;
		}
		else{
			date.setMinutes(date.getMinutes()-60);//60min
			var y = date.getFullYear();
			var M = date.getMonth()+1;
			var d = date.getDate();
			var h = date.getHours();
			var m = date.getMinutes();
			var s = date.getSeconds();
			h = formatTimeChunk(h);
			m = formatTimeChunk(m);
			s = formatTimeChunk(s);	
			d = formatTimeChunk(d);	
			M = formatTimeChunk(M);
			_fromDate = y+"-"+M+"-"+d+" "+h+":"+m+":"+s;
		}
		return _fromDate;
	};

	if(time){
		if(time.toLowerCase() == "now"){
			dataTable = "AS_STATS_SUMMARY_PER_MINUTE";
			//timeGroup = "minute";
			orderByQuery = "group by minute,hour,year,month,day,time order by year DESC ,month DESC,day DESC,hour DESC,minute DESC";
			selectQuery = "time, avg(avg_response_time) as avg_response_time";
			jqPlotAxisFormatString = "%b-%d %H:%M";
			jqPlotXaxisLbl = "Minute";
			_tickInterval = "5 minute";

			var toDate = getCurrentDay("now");
			var fromDate = setFromdate("now");
			timeBetweenQuery = "time between '" + fromDate + "' and '" + toDate + "'";
		}
		else if(time.toLowerCase() == "day"){
			dataTable = "AS_STATS_SUMMARY_PER_HOUR";
			//timeGroup = "hour";
			orderByQuery = "group by HOUR,year,month,day,time order by year DESC ,month DESC,day DESC,hour DESC";
			selectQuery = "time, avg(avg_response_time) as avg_response_time";
			jqPlotAxisFormatString = "%b-%d %H:00";
			jqPlotXaxisLbl = "Hour";
			_tickInterval = "1 hour";

			var toDate = getCurrentDay("day");
			var fromDate = setFromdate("day");
			timeBetweenQuery = "time between '" + fromDate + "' and '" + toDate + "'";
		}
		else if(time.toLowerCase() == "month"){
			dataTable = "AS_STATS_SUMMARY_PER_DAY";
			//timeGroup = "day";
			orderByQuery = "group by year,month,day,time order by year DESC ,month DESC,day DESC";
			selectQuery = "time, avg(avg_response_time) as avg_response_time";
			jqPlotAxisFormatString = "%b-%d";
			jqPlotXaxisLbl = "Day";
			_tickInterval = "2 day";

			var toDate = getCurrentDay("month");
			var fromDate = setFromdate("month");
			timeBetweenQuery = "time between '" + fromDate + "' and '" + toDate + "'";
		}
		else if(time.toLowerCase() == "all"){
			dataTable = "AS_STATS_SUMMARY_PER_MONTH";
			//timeGroup = "month";
			orderByQuery = "group by year,month,time order by year DESC ,month DESC";
			selectQuery = "time, avg(avg_response_time) as avg_response_time";
			jqPlotAxisFormatString = "%Y-%b";
			jqPlotXaxisLbl = "Month";
			_tickInterval = "1 month";

			var toDate = getCurrentDay("year");
			var fromDate = setFromdate("year");
			timeBetweenQuery = "time between '" + fromDate + "' and '" + toDate + "'";
		}
		else{
			new Log().info("cannot select table");
		}
	}
	if(dataTable){
		if(operation!=undefined && operation!="" && operation!=null){
			result = queryDataOperationLvl();	
		}
		else if(service!=undefined && service!="" && service!=null){
			result = queryDataServiceLvl();	
		}
		else if(server!=undefined && server!="" && server!=null){
			result = queryDataServerLvl();	
		}
		else{
			result = queryDataAllServers();
				
		}
	}
	
	function QueryResults(q){
		
		var result;
		try{
			var db = new Database("WSO2BAM_DATASOURCE");
			result = db.query(q);
		}
		catch(e){
			print("<span style='color:#fff;font-weight:100;font-size:16px;'>No data available. Please visit our <a href='http://docs.wso2.org/wiki/display/BAM200/Service+Statistics+Toolbox' target='_blank' style='color:#FFFE89'>docs</a> to see how to configure AS monitoring</span><br /><span style='color:#eee;font-size:11px;'> <b>Reason : </b>" + e +"</span>");
		}
		finally{
			db.close();
		}
		return result;
	}
	function convertDBResult(result, colx, coly) {
				var array = [];
				colx = colx.toLowerCase();
				coly = coly.toLowerCase();
				var colxUpperCase = colx.toUpperCase();
				var colyUpperCase = coly.toUpperCase(); 
				if(result){for (var i = 0; i < result.length; i++) {
					if(result[i][colx] != null && result[i][coly] != null){
						array.push([result[i][colx],parseFloat(result[i][coly])]);
					}
					else if(result[i][colxUpperCase] != null && result[i][colyUpperCase]  != null){
						array.push([result[i][colxUpperCase],parseFloat(result[i][colyUpperCase])]);					
					}
					else{
						array = null;					
					}
				}}

				return array;
       	};
	function generateValuesXaxis(result, param){
		var params = param || {};
		var year = param.year || "";
		var month = param
	}
	function queryDataAllServers(){
			axisData = null;
			//axisYData = null;
			
	    		var query = "select "+selectQuery+" from "+dataTable+" where " + timeBetweenQuery + " "+orderByQuery+"";
			var result = QueryResults(query);
			axisData = convertDBResult(result,axisX,axisY);
			
			//axisYData = convertDBResult(result,axisY);
		
	};
	function queryDataServerLvl(){
			axisData = null;
			//axisYData = null;
	    		var query = "select "+selectQuery+" from "+dataTable+" where " + timeBetweenQuery + " and host='"+server+"' "+orderByQuery+"";
			var result = QueryResults(query);
			axisData = convertDBResult(result,axisX,axisY);
			//axisYData = convertDBResult(result,axisY);
	};
	function queryDataServiceLvl(){
			axisData = null;
			//axisYData = null;
	    		var query = "select "+selectQuery+" from "+dataTable+" where " + timeBetweenQuery + " and host='"+server+"' and service_name='"+service+"' "+orderByQuery+"";
			var result = QueryResults(query);
			axisData = convertDBResult(result,axisX,axisY);
			//axisYData = convertDBResult(result,axisY);
	};
	function queryDataOperationLvl(){
			axisData = null;
			//axisYData = null;
	    		var query = "select "+selectQuery+" from "+dataTable+" where " + timeBetweenQuery + " and host='"+server+"' and service_name='"+service+"' and operation_name='"+operation+"' "+orderByQuery+"";
			var result = QueryResults(query);
			axisData = convertDBResult(result,axisX,axisY);
			//axisYData = convertDBResult(result,axisY);
	};
	function formatTimeChunk(t){
		if (t<10){
  			t="0" + t;
		}
		return t;
	}
%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<link rel="stylesheet" type="text/css" href="../jqPlot/jquery.jqplot.min.css" />
</head>
<body>
<div id="errorInfo"></div>
<%
if(axisData){
	if(typeof axisData[0] !== 'undefined' && axisData[0] !== null){
%>
<div id="bar-chart-simple"></div>
<%
}}
%>
<script type="text/javascript" src="../scripts/jquery-1.7.2.min.js"></script>
<script type="text/javascript" src="../jqPlot/jquery.jqplot.min.js"></script>
<script type="text/javascript" src="../jqPlot/plugins/jqplot.barRenderer.min.js"></script>
<script type="text/javascript" src="../jqPlot/plugins/jqplot.categoryAxisRenderer.min.js"></script>
<script type="text/javascript" src="../jqPlot/plugins/jqplot.pointLabels.min.js"></script>
<script type="text/javascript" src="../jqPlot/plugins/jqplot.canvasTextRenderer.min.js"></script>
<script type="text/javascript" src="../jqPlot/plugins/jqplot.canvasAxisTickRenderer.min.js"></script>
<script type="text/javascript" src="../jqPlot/plugins/jqplot.canvasAxisLabelRenderer.js"></script>
<script class="include" type="text/javascript" src="../jqPlot/plugins/jqplot.highlighter.min.js"></script>
<script class="include" type="text/javascript" src="../jqPlot/plugins/jqplot.cursor.min.js"></script>
<script class="include" type="text/javascript" src="../jqPlot/plugins/jqplot.dateAxisRenderer.min.js"></script>
<script type="text/javascript" src="../scripts/date.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../jqPlot/excanvas.min.js"></script>
<![endif]-->
<style type="text/css">
body{
font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
}
#bar-chart-simple{
	width:94%;
}
.jqplot-highlighter-tooltip {
                    background-color: rgba(57,57,57, 0.9);
                    padding: 7px;
                    color: #ffffff;
                }
.jqplot-target {
                    margin: 20px;
                    height: 340px;
                    width: 80%;
                    color: #ffffff;
                }
</style>
<script type="text/javascript">
    $(document).ready(function(){
	var seriesData = <%=axisData%>
        var graphMaxValue;
	var graphMinValue;
	var yMax = 0;
	var maxValue = Math.max.apply(Math,seriesData.map(function(o){return o[1];}));

	if(isFinite(maxValue)){
		for(var i = 100; i < 1000000000 ; i){
			if(maxValue<i){
				var y = i/10;
				maxValue = Math.ceil(maxValue/y)*y;
				break;
			}
			i = i*10;
		}
		yMax = maxValue;
	}
	var _timeGroup = "<%=time.toLowerCase()%>";
	var axisXTicks = [];
	if(typeof seriesData[0] !== 'undefined' && seriesData[0] !== null){
		for(var i=0;i<seriesData.length;i++){
			axisXTicks.push(seriesData[i][0]);
		}
		graphMinValue = ""+seriesData[seriesData.length-1][0]+"";
		if(seriesData.length==0){
			graphMinValue = ""+seriesData[0][0]+"";	
		}
		graphMaxValue = ""+seriesData[0][0]+"";
		if(_timeGroup == "now"){
			graphMaxValue = Date.parse(graphMaxValue, "yyyy-MM-dd HH:mm:ss").add({ minutes: 1 });
			graphMinValue = Date.parse(graphMinValue, "yyyy-MM-dd HH:mm:ss").add({ minutes: -1 });
		}
		if(_timeGroup == "day"){
			graphMaxValue = Date.parse(graphMaxValue, "yyyy-MM-dd HH:mm:ss").add({ hours: 1 });
			graphMinValue = Date.parse(graphMinValue, "yyyy-MM-dd HH:mm:ss").add({ hours: -1 });
		}
		if(_timeGroup == "month"){
			graphMaxValue = Date.parse(graphMaxValue, "yyyy-MM-dd").add({ days: 1 });
			graphMinValue = Date.parse(graphMinValue, "yyyy-MM-dd").add({ days: -1 });
		}
		if(_timeGroup == "all"){
			graphMaxValue = Date.parse(graphMaxValue, "yyyy-MM").add({ months: 1 });
			graphMinValue = Date.parse(graphMinValue, "yyyy-MM").add({ months: -1 });
		}
		var jqtickInterval = "<%=_tickInterval%>";
	var xaxisLblFormat = "<%=jqPlotAxisFormatString%>";
        var plot1 = $.jqplot("bar-chart-simple", [seriesData], {
                seriesColors: ["#FFC062"],
                title: 'Average Response Time',
                highlighter: {
                    show: true,
                    sizeAdjust: 1,
                    tooltipOffset: 0,
			tooltipLocation: 'n'
                },
                grid: {
                    background: 'rgba(57,57,57,0.0)',
                    drawBorder: false,
                    shadow: false,
                    gridLineColor: '#666666',
                    gridLineWidth: 2
                },
                seriesDefaults: {
                    rendererOptions: {
                        animation: {
                            show: true
                        }
                    },
                    showMarker: true
                },
                series: [
                    {
                        label: 'Average Response Time',
			markerOptions: { size: 10,style:'filledCircle'}
			
                    }
                ],
                axesDefaults: {
                    rendererOptions: {
                        baselineWidth: 1.5,
                        baselineColor: '#FFFFFF',
                        drawBaseline: false
                    }
                },
                axes: {
                    xaxis: {
			label:"<%=jqPlotXaxisLbl%>",
                        renderer:jQuery.jqplot.DateAxisRenderer,
			tickRenderer: $.jqplot.CanvasAxisTickRenderer,
			drawMajorGridlines: false,
			min:graphMinValue,
			max:graphMaxValue,
			//ticks:axisXTicks,
			tickInterval: jqtickInterval,
                        tickOptions:{formatString:xaxisLblFormat,angle: -45,textColor: '#ffffff'}
                    },
                    yaxis: {
                        min:0,max:yMax,numberTicks:6,
			//tickInterval: 1,
                        tickOptions: {
                            showMark: true,formatString:'%.2f ms'
                        }
                    }
                },
		cursor: {
            		show: true,
            		zoom: true
            		//showTooltip: false
        	}
            });
	}else{
		$("#errorInfo").html("<span style='color:#fff;font-weight:100;font-size:16px;'>No data available. Please visit our <a href='http://docs.wso2.org/wiki/display/BAM200/Service+Statistics+Toolbox' target='_blank' style='color:#FFFE89'>docs</a> to see how to configure AS monitoring</span>")
	}
	

              $('.jqplot-highlighter-tooltip').addClass('ui-corner-all')
    });
  

</script>
</body>
</html>
