CREATE EXTERNAL TABLE IF NOT EXISTS AllTicketingStats (key STRING, clientType STRING,operation STRING,
payload_timestamp BIGINT) STORED BY 
'org.apache.hadoop.hive.cassandra.CassandraStorageHandler' WITH SERDEPROPERTIES ( "cassandra.host" = "127.0.0.1",
"cassandra.port" = "9160","cassandra.ks.name" = "EVENT_KS",
"cassandra.ks.username" = "admin","cassandra.ks.password" = "admin",
"cassandra.cf.name" = "org_wso2_ticket_service",
"cassandra.columns.mapping" = ":key,meta_clientType,payload_operation,payload_timestamp");                                    

CREATE EXTERNAL TABLE IF NOT EXISTS TicketStatsPerMinute(clientType STRING, operation STRING, 
total_count INT, year SMALLINT,month SMALLINT,day SMALLINT,
hour SMALLINT,minute SMALLINT, time STRING) 
STORED BY 'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler' TBLPROPERTIES ( 
'mapred.jdbc.driver.class' = 'org.h2.Driver',
'mapred.jdbc.url' = 'jdbc:h2:repository/database/samples/BAM_STATS_DB;AUTO_SERVER=TRUE',
'mapred.jdbc.username' = 'wso2carbon','mapred.jdbc.password' = 'wso2carbon',
'hive.jdbc.update.on.duplicate' = 'true',
'hive.jdbc.primary.key.fields' = 'clientType,operation,year,month,day,hour,minute',
'hive.jdbc.table.create.query' = 'CREATE TABLE Ticket_Stats_Per_Minute 
(clientType VARCHAR(20) NOT NULL,operation VARCHAR(20),
 total_count INT, year SMALLINT, month SMALLINT, day SMALLINT, 
hour SMALLINT, minute SMALLINT, time VARCHAR(30))');

insert overwrite table TicketStatsPerMinute select clientType,operation, 
count(DISTINCT key) as total_count, 
year(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )) as year, 
month(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )) as month,
day(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )) as day,
hour(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )) as hour,
 minute(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )) as minute,
concat(substring(from_unixtime(cast(payload_timestamp/1000 as BIGINT), 'yyyy-MM-dd HH:mm:ss'),0,16),':00') as time 
from AllTicketingStats group by 
year(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )), 
month(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )),
day(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )),
hour(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )),
minute(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )),
substring(from_unixtime(cast(payload_timestamp/1000 as BIGINT), 'yyyy-MM-dd HH:mm:ss'),0,16),
clientType,operation;             


CREATE EXTERNAL TABLE IF NOT EXISTS TicketStatsPerMinuteDataFetcher (clientType STRING, operation STRING, 
total_count INT, year SMALLINT,month SMALLINT,day SMALLINT,
hour SMALLINT,minute SMALLINT, time STRING) 
STORED BY 'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler' TBLPROPERTIES ( 
'mapred.jdbc.driver.class' = 'org.h2.Driver',
'mapred.jdbc.url' = 'jdbc:h2:repository/database/samples/BAM_STATS_DB;AUTO_SERVER=TRUE',
'mapred.jdbc.username' = 'wso2carbon','mapred.jdbc.password' = 'wso2carbon',
'mapred.jdbc.input.table.name' = 'Ticket_Stats_Per_Minute' );

CREATE EXTERNAL TABLE IF NOT EXISTS TicketStatsPerHour (clientType STRING, operation STRING, 
total_count INT, year SMALLINT,month SMALLINT,day SMALLINT,
hour SMALLINT, time STRING) 
STORED BY 'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler' TBLPROPERTIES ( 
'mapred.jdbc.driver.class' = 'org.h2.Driver',
'mapred.jdbc.url' = 'jdbc:h2:repository/database/samples/BAM_STATS_DB;AUTO_SERVER=TRUE',
'mapred.jdbc.username' = 'wso2carbon','mapred.jdbc.password' = 'wso2carbon',
'hive.jdbc.update.on.duplicate' = 'true',
'hive.jdbc.primary.key.fields' = 'clientType,operation,year,month,day,hour',
'hive.jdbc.table.create.query' = 'CREATE TABLE Ticket_Stats_Per_Hour 
(clientType VARCHAR(20) NOT NULL,operation VARCHAR(20),
 total_count INT, year SMALLINT, month SMALLINT, day SMALLINT, 
hour SMALLINT, time VARCHAR(30))' );

insert overwrite table TicketStatsPerHour 
select clientType, operation, sum(total_count) as total_count, 
year, month, day,hour,concat(substr(time,0,13),':00:00') as time 
from TicketStatsPerMinuteDataFetcher group by 
clientType, operation ,year, month,day,hour,substr(time,0,13);

CREATE EXTERNAL TABLE IF NOT EXISTS TicketStatsPerHourDataFetcher 
(clientType STRING, operation STRING, 
total_count INT, year SMALLINT,month SMALLINT,day SMALLINT,
hour SMALLINT, time STRING) 
STORED BY 'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler' TBLPROPERTIES ( 
'mapred.jdbc.driver.class' = 'org.h2.Driver',
'mapred.jdbc.url' = 'jdbc:h2:repository/database/samples/BAM_STATS_DB;AUTO_SERVER=TRUE',
'mapred.jdbc.username' = 'wso2carbon','mapred.jdbc.password' = 'wso2carbon',
'mapred.jdbc.input.table.name' = 'Ticket_Stats_Per_Hour'  );


CREATE EXTERNAL TABLE IF NOT EXISTS TicketStatsPerDay 
(clientType STRING, operation STRING, 
total_count INT, year SMALLINT,month SMALLINT,day SMALLINT, time STRING) 
STORED BY 'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler' TBLPROPERTIES ( 
'mapred.jdbc.driver.class' = 'org.h2.Driver',
'mapred.jdbc.url' = 'jdbc:h2:repository/database/samples/BAM_STATS_DB;AUTO_SERVER=TRUE',
'mapred.jdbc.username' = 'wso2carbon','mapred.jdbc.password' = 'wso2carbon',
'hive.jdbc.update.on.duplicate' = 'true',
'hive.jdbc.primary.key.fields' = 'clientType,operation,year,month,day',
'hive.jdbc.table.create.query' = 'CREATE TABLE Ticket_Stats_Per_Day 
(clientType VARCHAR(20) NOT NULL,operation VARCHAR(20),
 total_count INT, year SMALLINT, month SMALLINT, day SMALLINT, time VARCHAR(30))' );


insert overwrite table TicketStatsPerDay 
select clientType, operation, sum(total_count) as total_count,
year, month, day,substr(time,0,10) as time 
from TicketStatsPerHourDataFetcher group by 
clientType, operation,year, month,day,substr(time,0,10);

CREATE EXTERNAL TABLE IF NOT EXISTS TicketStatsPerMonth 
(clientType STRING, operation STRING, 
total_count INT, year SMALLINT,month SMALLINT, time STRING) 
STORED BY 'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler' TBLPROPERTIES ( 
'mapred.jdbc.driver.class' = 'org.h2.Driver',
'mapred.jdbc.url' = 'jdbc:h2:repository/database/samples/BAM_STATS_DB;AUTO_SERVER=TRUE',
'mapred.jdbc.username' = 'wso2carbon','mapred.jdbc.password' = 'wso2carbon',
'hive.jdbc.update.on.duplicate' = 'true',
'hive.jdbc.primary.key.fields' = 'clientType,operation,year,month',
'hive.jdbc.table.create.query' = 'CREATE TABLE Ticket_Stats_Per_Month 
(clientType VARCHAR(20) NOT NULL,operation VARCHAR(20),
 total_count INT, year SMALLINT, month SMALLINT, time VARCHAR(30))' );

insert overwrite table TicketStatsPerMonth 
select clientType, operation, sum(total_count) as total_count, 
year, month,substr(time,0,7) as time from 
TicketStatsPerHourDataFetcher group by 
clientType, operation,year, month,substr(time,0,7);











