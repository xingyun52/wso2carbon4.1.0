<?xml version="1.0" encoding="UTF-8" ?>
<Module>
    <ModulePrefs
            title="Min Max Average Response Times"
            height="240"
            description="Allows to monitor min max average processing times of a server"
            author="Tyrell Perera" author_email="tyrell@wso2.com" author_affiliation="WSO2"
            author_location="Colombo, Sri Lanka">
        <Require feature="setprefs"/>
        <Require feature="tabs"/>      
    </ModulePrefs>
    <UserPref name="serverUrl" display_name="Server to monitor" default_value=""
              datatype="string">
    </UserPref>
    <Content type="html">
        <![CDATA[

        <script type="text/javascript" src="swfobject1-5/swfobject.js"></script>
        <script type="text/javascript" src="encoder-decoder.js"></script>
        <script type="text/javascript" src="js/excanvas.js"></script>
        <script type="text/javascript" src="js/jquery.js"></script>
        <script type="text/javascript" src="js/jquery.flot.js"></script>
        <script type="text/javascript" src="js/jquery-1.4.4.min.js"></script>
<script type="text/javascript" src="js/wso2.js"></script>
<script type="text/javascript" src="js/wso2.xml.js"></script>
<script type="text/javascript" src="js/wso2.xml.axiom.js"></script>
<script type="text/javascript" src="js/retrieve-data.js"></script>
        <script type="text/javascript" src="js/min-max-avg-resp-graph.js"></script>
        <script type="text/javascript" src="js/min-max-avg-resp-count.js"></script>
        <script type="text/javascript" src="js/help-populator.js"></script>
		<link rel="stylesheet" type="text/css" href="css/gadgets.css"/>
        <link rel="stylesheet" type="text/css" href="css/help.css"/>

            <div id="disp_config" style="display:none;">
             <table class="main-table">
              <tr>
               <td>
                <div id="select_boxes">
                 <table>
                  <tr>
                   <td><div id="server_select_box">
                                               <select id="serverUrls" onchange="loadServices();">
                                               </select>
                                              </div></td>
                   </tr>                  
                 </table>
                </div>
               </td>
              </tr>
              <tr></tr>               
             </table>
            </div>

            <div id="main_disp" style="display:none;">
                <div id="disp_title" class="titleText"></div>
                <div id="resource_meter" style="text-align:center;margin-top: 5px;width:300px;height:140px;"></div>
            </div>
            <div id="disp_help" style="display:none;height:300px;">
		    </div>
            
            <script type="text/javascript">
            
                // Loading configured data
                var prefs = new _IG_Prefs(__MODULE_ID__);
                var serverUrl = prefs.getString("serverUrl");

                // Adding Tabs
                var tabs = new gadgets.TabSet(__MODULE_ID__, "Display");
                tabs.addTab("Display", {
                     contentContainer: document.getElementById("main_disp"),
                     callback: drawDiagram
                });
                tabs.addTab("Configure", "disp_config");
                tabs.addTab("Help", {
                    contentContainer: document.getElementById("disp_help"),
                    callback: showHelp
                });
     			  
                function showHelp() {
                    clientSideInclude("disp_help", "registry/resource/_system/config/repository/dashboards/gadgets/help/min-max-avg-processing-times.html");
                }

                var MY_MODULE_ID = __MODULE_ID__;

                var intervalObj;
                
                // Drawing the flot diagram
                function loadDataAndDraw(){
                        var valueStr = getminmaxaverageresptimessystem(serverUrl);                         
                        minMaxAverageRespTimesGraph.add(removeCarriageReturns(valueStr));

                        try{
                            jQuery.plot(jQuery("#resource_meter"), [
                                    {
                                    data: minMaxAverageRespTimesGraph.getMin(),
                                    label: "Min"
                                    },{
                                    data: minMaxAverageRespTimesGraph.getMax(),
                                    label: "Max"
                                    },{
                                    data: minMaxAverageRespTimesGraph.getAvg(),
                                    label: "Avg"
                                    }
                                ], {
                                    xaxis: {
                                        ticks: minMaxAverageRespTimesGraph.tick(),
                                        min: 0
                                    },
                                    yaxis: {
                                        ticks: 5,
                                        min: 0
                                    },
                                    lines: { show: true, fill: false }
                           });
                       }catch(e){}
                 }

                 function initGadget() {
            		var serverListArray = getServerList().split("|");

					// Cleaning up the existing select box
					var selectBoxEl = document.getElementById("server_select_box");
					selectBoxEl.innerHTML = "";

					var newServerSelectHTML = '<select id="serverUrls" onchange="refreshGraphData();"><option value="">--Server--</option>';
					for (var x = 0; x < serverListArray.length; x++) {
						var _tokens = serverListArray[x].split(",");
						newServerSelectHTML +=
						'<option value="' + _tokens[0] + '">' + _tokens[1] + '</option>';
					}
					newServerSelectHTML += '</select>';
					
                    // Adding the new select to div
                    selectBoxEl.innerHTML = newServerSelectHTML;

                    if(!isServerExists(serverListArray, serverUrl)){
                       serverUrl = "";
                       prefs.set("serverUrl", serverUrl);
                    }

                    drawDiagram();
                }

                function refreshGraphData() {
                    serverUrl =
                    document.getElementById('serverUrls')[document.getElementById('serverUrls').selectedIndex].value;

                    if ((serverUrl != "") && (serverUrl != "No Servers Configured")){
                        prefs.set("serverUrl", serverUrl);
                    }

                    drawDiagram();
                }

                function drawDiagram() {
                    // Clear existing content
                    var contentEl = document.getElementById("resource_meter");
                    contentEl.innerHTML = "";

                    var titleEl = document.getElementById("disp_title");
                    titleEl.innerHTML = "";

                    // Check whether we have a server and service configured
                    if(serverUrl==""){
                       contentEl.innerHTML = "Please use the 'Configure' tab to select a Service to monitor.";

                    }else{
                        // Set display title
                        titleEl.innerHTML = "Monitoring server " + serverUrl;
                        
                        initReqCountGraphs(30);

                        if(intervalObj){
                            clearInterval(intervalObj);
                        }

                        loadDataAndDraw();
                        intervalObj = setInterval("loadDataAndDraw()", 60000);
                    }
                }                  
                
                // Registering onload handler
                gadgets.util.registerOnLoadHandler(initGadget);
            </script>
            
        ]]>
    </Content>
</Module>
