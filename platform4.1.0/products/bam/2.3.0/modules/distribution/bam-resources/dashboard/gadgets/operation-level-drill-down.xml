<?xml version="1.0" encoding="utf-8" ?>
<Module>
  <ModulePrefs
	title="Mediation Server - Endpoint - Operation - Fault Information"
    height="300"
    description="Service request response fault counts of server"
    author="Ruwan Janapriya, Lahiru Priyadarshana" author_email="carbon-dev@wso2.org" author_affiliation="WSO2"
    author_location="Colombo, Sri Lanka">
    <Require feature="setprefs"/>
    <Require feature="tabs"/>
    <Require feature="dynamic-height"/>
    <Require feature="views"/>
  </ModulePrefs>
  <UserPref name="serverID" display_name="Server to monitor" default_value="" datatype="string"></UserPref>
  <UserPref name="interval" display_name="Refresh interval (ms)" default_value="20000" datatype="int"></UserPref>
  <Content type="html" view="default">
    <![CDATA[

<script type="text/javascript" src="js/help-populator.js"></script>
<script type="text/javascript" src="js/wso2vis.js"></script>
<style>
div#qTip {
  padding: 3px;
  border: 1px solid #666;
  border-right-width: 2px;
  border-bottom-width: 2px;
  display: none;
  background: #999;
  color: #FFF;
  font: bold 10px Verdana, Arial, sans-serif;
  text-align: left;
  position: absolute;
  z-index: 1000;
}
</style>
<link rel="stylesheet" type="text/css" href="css/gadgets.css"/>
<link rel="stylesheet" type="text/css" href="css/help.css"/>
<div id="endpoint_disp" style="display:none;height:300px;text-align:center;vertical-align:middle;">
  <div id="server_select" style="margin-top:10px"></div>
  <div id="endpoints" class="pleaseText" ></div>
</div>
<div id="operation_disp" style='display:none;height:300px;text-align:center;vertical-align:middle;font-size:10px;font-family: "Lucida Grande","Lucida Sans","Microsoft Sans Serif", "Lucida Sans Unicode","Verdana","Sans-serif","trebuchet ms" !important;'>
    <div id="operations" class="pleaseText" ></div>
</div>
<div id="fault_disp" style='display:none;height:300px;text-align:center;vertical-align:middle;font-size:10px;font-family: "Lucida Grande","Lucida Sans","Microsoft Sans Serif", "Lucida Sans Unicode","Verdana","Sans-serif","trebuchet ms" !important;'>
    <div id="faults" class="pleaseText" ></div>
</div>
<div id="disp_help" style="display:none;height:300px;">
</div>	
<script type="text/javascript">

// Loading Gadget configuration
var prefs = new _IG_Prefs(__MODULE_ID__);

wso2vis.environment.serverID = prefs.getString("serverID");
wso2vis.environment.serverURL = prefs.getString("serverURL");
wso2vis.environment.endpointName = prefs.getString("endpoint");
wso2vis.environment.operationName = prefs.getString("operation");
wso2vis.environment.selectedTab = prefs.getString("selectedTab");
wso2vis.environment.interval = prefs.getString("interval");

var intialized = false;

//var url = "registry/resource/_system/config/repository/dashboards/gadgets/data/generator.xml";
var url = "carbon/gauges/gadgets/data/flashdata-ajaxprocessor.jsp?funcName=op-https://10.100.1.245:8243/esb";
var serversUrl = "carbon/gauges/gadgets/data/flashdata-ajaxprocessor.jsp?funcName=servers";

var dataProviderServers = new wso2vis.p.ProviderGET(serversUrl);
var dataProvider = new wso2vis.p.ProviderGET(url);
var dataFilter = new wso2vis.f.BasicFilter(["level0", "level1"], ["@name"]);
var endpointFilter = new wso2vis.f.BasicFilter(["level0", "level1"], ["@name"], ["endpoint 01"]); //TODO FilterArray
var operationFilter = new wso2vis.f.BasicFilter(["level0", "level1", "0", "level2"], ["@name"], ["operation 01"]); //TODO FilterArray

var operationLineChart;

function globalTick() {
    dataProvider.pullData();
}

if (wso2vis.environment.interval == "")
{
    prefs.set("interval", 20000);
    wso2vis.environment.interval = "20000";
}

var inte = 20000;
try {
    inte = parseInt(wso2vis.environment.interval);
}
catch (err) {}

var timer = new wso2vis.u.Timer(inte);

var serviceFilter = new wso2vis.f.form.Select()
                             .canvas("server_select")
                             .dataField(["level0", "level1"])
                             .dataLabel(["@name"])
                             .defaultText("- Select Server -");
//serviceFilter.onChange = serverOnChange;

var endpointsChart = new wso2vis.s.chart.protovis.ClusteredColumnChart("endpoints","","");
endpointsChart.dataField(["level0", "level1"])
            .subDataField(["stats"])
            .subDataValue(["@count"])
            .dataLabel(["@name"])
            .subDataLabel(["@name"])
            .paddingTop(25)
            .paddingBottom(15)
            .paddingLeft(15)
            .paddingRight(5)
            .width(350)
            .height(260);
endpointsChart.onTooltip = endpointsChartTooltip;
endpointsChart.onClick = endpointsChartClick;
endpointsChart.load();

var operationsChart = new wso2vis.s.chart.protovis.ClusteredColumnChart("operations","","");
operationsChart.dataField(["level0", "level1", "0", "level2"])
            .subDataField(["stats"])
            .subDataValue(["@count"])
            .dataLabel(["@name"])
            .subDataLabel(["@name"])
            .paddingTop(40)
            .paddingBottom(15)
            .paddingLeft(15)
            .paddingRight(5)
            .width(350)
            .height(280);
operationsChart.onTooltip = operationsChartTooltip;
operationsChart.onClick = operationsChartClick;
operationsChart.load();

operationLineChart = new wso2vis.s.chart.protovis.LineChart("faults","Requests and Faults","");
operationLineChart.dataField(["level0", "level1", "0", "level2", "0", "stats"])
    .dataValue(["@count"])
    .dataLabel(["@name"])
    .width(350)
    .height(260)
    .band(10)
    .legend(false)
    .marks(true)
    .xInterval(inte)
    .xSuffix("s");
operationLineChart.onTooltip = operationLineChartTooltip;
operationLineChart.load();

dataProvider.addDataReceiver(dataFilter);
dataFilter.addDataReceiver(endpointsChart);
dataFilter.addDataReceiver(endpointFilter);
endpointFilter.addDataReceiver(operationsChart);
endpointFilter.addDataReceiver(operationFilter);
operationFilter.addDataReceiver(operationLineChart);

dataProviderServers.addDataReceiver(serviceFilter);

timer.tick = globalTick;

// Adding Tabs                
var tabs = new gadgets.TabSet( __MODULE_ID__ ,"Servers");
tabs.addTab("Endpoints", {
    contentContainer: document.getElementById("endpoint_disp"),
    callback: drawEndpointDiagram
    }); // 0
tabs.addTab("Operations", {
    contentContainer: document.getElementById("operation_disp"),
    callback: drawOperationDiagram
    }); // 1
tabs.addTab("Faults", {
    contentContainer: document.getElementById("fault_disp"),
    callback: drawFaultDiagram
    }); // 2
tabs.addTab("Help", {
    contentContainer: document.getElementById("disp_help"),
    callback: showHelp
    }); // 3

function initialize() {
    wso2vis.environment.serverID = prefs.getString("serverID");
    wso2vis.environment.serverURL = prefs.getString("serverURL");
    wso2vis.environment.endpointName = prefs.getString("endpoint");
    wso2vis.environment.operationName = prefs.getString("operation");
    wso2vis.environment.selectedTab = prefs.getString("selectedTab");
    
    dataProvider.initialize();
    dataProviderServers.initialize();
    serviceFilter.load();
    
    timer.startTimer();
    
    gadgets.window.adjustHeight(320);
    
    try {
        var tabIndex = parseInt(wso2vis.environment.selectedTab);
        tabs.setSelectedTab(tabIndex);
    }
    catch (err){
        
    }
    
    intialized = true;

    //document.getElementById("wso2visSelect_2").onChange = serverOnChange;
}

function drawEndpointDiagram() {
    if (intialized)
        prefs.set("selectedTab", 0);
}

function drawOperationDiagram() {
    /*if (wso2vis.environment.serverID != null && wso2vis.environment.serverID != "" && wso2vis.environment.serverID != undefined) {
        dataProviderEndpoints.url = url + wso2vis.environment.serverID;
        dataProviderEndpoints.pullDataSync();
        dataProviderEndpointsForSingleEP.url = url + wso2vis.environment.serverID;
        dataProviderEndpointsForSingleEP.pullDataSync();
    }*/
    if (intialized)
    {
        //prefs.set("serverID", wso2vis.environment.serverID);
        //prefs.set("serverURL", wso2vis.environment.serverURL);
        prefs.set("selectedTab", 1);
    }
}

function drawFaultDiagram() {
    if (wso2vis.environment.operationName === "") {
        operationFilter.filterArray([]);    
    }
    if (intialized) {
        prefs.set("operation", wso2vis.environment.operationName);
        prefs.set("selectedTab", 2);
    }
}

function endpointsChartTooltip(data, index) {
    return data["@name"] + " - " + data["stats"][index]["@name"] + ": " + data["stats"][index]["@count"];
}

function endpointsChartClick(data, index) {
    operationLineChart.clear();
    endpointFilter.filterArray([data["@name"]]);
    wso2vis.environment.endpointName = data["@name"];
    tabs.setSelectedTab(1);
    dataProvider.pullData();
}

function operationsChartTooltip(data, index) {
    return data["@name"] + " - " + data["stats"][index]["@name"] + ": " + data["stats"][index]["@count"];
}

function operationsChartClick(data, index) {
    operationLineChart.clear();
    operationFilter.filterArray([data["@name"]]);
    wso2vis.environment.operationName = data["@name"];
    tabs.setSelectedTab(2);
    dataProvider.pullData();
}

wso2vis.fn.selectFormChanged = function(i) {
    elem = document.getElementById("wso2visSelect_"+i);
    var server = elem[elem.selectedIndex].text;
    dataProvider.url = "carbon/gauges/gadgets/data/flashdata-ajaxprocessor.jsp?funcName=op-"+server;
    dataProvider.pullDataSync();
};

function operationLineChartTooltip(data) {
    return data["@name"];
}

function showConfig() {
    //timer.stopTimer();                                
    //dataFilterDialog.load();
}

//-----------------------

function configOnApply(data) {
    // save pref
    if (data != null && data.length > 0) {
        var arr = data[0];
        if (data.length > 1) {
          for (var i = 1; i < data.length; i++) {
            arr += ',' + data[i];
          }
        }
    }
    prefs.set("filteredArray", arr); 
    prefs.set("serverID", serverID);
    prefs.set("serverURL", serverURL);
    drawDiagram();            
}

function configOnCancel() {
    drawDiagram();
}

function showHelp() {
    if (intialized)
        prefs.set("selectedTab", 3);
    clientSideInclude("disp_help", "registry/resource/_system/config/repository/dashboards/gadgets/help/operation-level-drill-down.html");
}

// Registering onload handler
gadgets.util.registerOnLoadHandler(initialize);		  
</script>
]]> 
</Content>

<Content type="html" view="canvas">
   <![CDATA[

<script type="text/javascript" src="js/help-populator.js"></script>
<script type="text/javascript" src="js/wso2vis.js"></script>
<style>
div#qTip {
  padding: 3px;
  border: 1px solid #666;
  border-right-width: 2px;
  border-bottom-width: 2px;
  display: none;
  background: #999;
  color: #FFF;
  font: bold 10px Verdana, Arial, sans-serif;
  text-align: left;
  position: absolute;
  z-index: 1000;
}
</style>
<link rel="stylesheet" type="text/css" href="css/gadgets.css"/>
<link rel="stylesheet" type="text/css" href="css/help.css"/>
<div id="endpoint_disp" style="display:none;height:600px;text-align:center;vertical-align:middle;">
  <div id="server_select" style="margin-top:10px"></div>
  <div id="endpoints" class="pleaseText" ></div>
</div>
<div id="operation_disp" style='display:none;height:600px;text-align:center;vertical-align:middle;font-size:10px;font-family: "Lucida Grande","Lucida Sans","Microsoft Sans Serif", "Lucida Sans Unicode","Verdana","Sans-serif","trebuchet ms" !important;'>
    <div id="operations" class="pleaseText" ></div>
</div>
<div id="fault_disp" style='display:none;height:600px;text-align:center;vertical-align:middle;font-size:10px;font-family: "Lucida Grande","Lucida Sans","Microsoft Sans Serif", "Lucida Sans Unicode","Verdana","Sans-serif","trebuchet ms" !important;'>
    <div id="faults" class="pleaseText" ></div>
</div>
<div id="disp_help" style="display:none;height:600px;">
</div>	
<script type="text/javascript">

// Loading Gadget configuration
var prefs = new _IG_Prefs(__MODULE_ID__);

wso2vis.environment.serverID = prefs.getString("serverID");
wso2vis.environment.serverURL = prefs.getString("serverURL");
wso2vis.environment.endpointName = prefs.getString("endpoint");
wso2vis.environment.operationName = prefs.getString("operation");
wso2vis.environment.selectedTab = prefs.getString("selectedTab");
wso2vis.environment.interval = prefs.getString("interval");

var intialized = false;

var url = "carbon/gauges/gadgets/data/flashdata-ajaxprocessor.jsp?funcName=op-https://10.100.1.245:8243/esb";
var serversUrl = "carbon/gauges/gadgets/data/flashdata-ajaxprocessor.jsp?funcName=servers";

var dataProviderServers = new wso2vis.p.ProviderGET(serversUrl);
var dataProvider = new wso2vis.p.ProviderGET(url);
var dataFilter = new wso2vis.f.BasicFilter(["level0", "level1"], ["@name"]);
var endpointFilter = new wso2vis.f.BasicFilter(["level0", "level1"], ["@name"], ["endpoint 01"]); //TODO FilterArray
var operationFilter = new wso2vis.f.BasicFilter(["level0", "level1", "0", "level2"], ["@name"], ["operation 01"]); //TODO FilterArray

var operationLineChart;

function globalTick() {
    dataProvider.pullData();
}

if (wso2vis.environment.interval == "")
{
    prefs.set("interval", 20000);
    wso2vis.environment.interval = "20000";
}

var inte = 20000;
try {
    inte = parseInt(wso2vis.environment.interval);
}
catch (err) {}

var timer = new wso2vis.u.Timer(inte);

var serviceFilter = new wso2vis.f.form.Select()
                             .canvas("server_select")
                             .dataField(["level0", "level1"])
                             .dataLabel(["@name"])
                             .defaultText("- Select Server -");

var endpointsChart = new wso2vis.s.chart.protovis.ClusteredColumnChart("endpoints","","");
endpointsChart.dataField(["level0", "level1"])
            .subDataField(["stats"])
            .subDataValue(["@count"])
            .dataLabel(["@name"])
            .subDataLabel(["@name"])
            .paddingTop(25)
            .paddingBottom(15)
            .paddingLeft(15)
            .paddingRight(5)
            .width(800)
            .height(520);
endpointsChart.onTooltip = endpointsChartTooltip;
endpointsChart.onClick = endpointsChartClick;
endpointsChart.load();

var operationsChart = new wso2vis.s.chart.protovis.ClusteredColumnChart("operations","","");
operationsChart.dataField(["level0", "level1", "0", "level2"])
            .subDataField(["stats"])
            .subDataValue(["@count"])
            .dataLabel(["@name"])
            .subDataLabel(["@name"])
            .paddingTop(40)
            .paddingBottom(15)
            .paddingLeft(15)
            .paddingRight(5)
            .width(800)
            .height(520);
operationsChart.onTooltip = operationsChartTooltip;
operationsChart.onClick = operationsChartClick;
operationsChart.load();

operationLineChart = new wso2vis.s.chart.protovis.LineChart("faults","Requests and Faults","");
operationLineChart.dataField(["level0", "level1", "0", "level2", "0", "stats"])
    .dataValue(["@count"])
    .dataLabel(["@name"])
    .width(800)
    .height(520)
    .band(10)
    .legend(false)
    .marks(true)
    .xInterval(inte)
    .xSuffix("s");
operationLineChart.onTooltip = operationLineChartTooltip;
operationLineChart.load();

dataProvider.addDataReceiver(dataFilter);
dataFilter.addDataReceiver(endpointsChart);
dataFilter.addDataReceiver(endpointFilter);
endpointFilter.addDataReceiver(operationsChart);
endpointFilter.addDataReceiver(operationFilter);
operationFilter.addDataReceiver(operationLineChart);

dataProviderServers.addDataReceiver(serviceFilter);

timer.tick = globalTick;

// Adding Tabs                
var tabs = new gadgets.TabSet( __MODULE_ID__ ,"Servers");
tabs.addTab("Endpoints", {
    contentContainer: document.getElementById("endpoint_disp"),
    callback: drawEndpointDiagram
    }); // 0
tabs.addTab("Operations", {
    contentContainer: document.getElementById("operation_disp"),
    callback: drawOperationDiagram
    }); // 1
tabs.addTab("Faults", {
    contentContainer: document.getElementById("fault_disp"),
    callback: drawFaultDiagram
    }); // 2
tabs.addTab("Help", {
    contentContainer: document.getElementById("disp_help"),
    callback: showHelp
    }); // 3

function initialize() {
    wso2vis.environment.serverID = prefs.getString("serverID");
    wso2vis.environment.serverURL = prefs.getString("serverURL");
    wso2vis.environment.endpointName = prefs.getString("endpoint");
    wso2vis.environment.operationName = prefs.getString("operation");
    wso2vis.environment.selectedTab = prefs.getString("selectedTab");
    
    dataProvider.initialize();
    dataProviderServers.initialize();
    serviceFilter.load();
    
    timer.startTimer();
    
    gadgets.window.adjustHeight(620);
    
    try {
        var tabIndex = parseInt(wso2vis.environment.selectedTab);
        tabs.setSelectedTab(tabIndex);
    }
    catch (err){
        
    }
    
    intialized = true;          
}

function drawEndpointDiagram() {
    if (intialized)
        prefs.set("selectedTab", 0);
}

function drawOperationDiagram() {
    /*if (wso2vis.environment.serverID != null && wso2vis.environment.serverID != "" && wso2vis.environment.serverID != undefined) {
        dataProviderEndpoints.url = url + wso2vis.environment.serverID;
        dataProviderEndpoints.pullDataSync();
        dataProviderEndpointsForSingleEP.url = url + wso2vis.environment.serverID;
        dataProviderEndpointsForSingleEP.pullDataSync();
    }*/
    if (intialized)
    {
        //prefs.set("serverID", wso2vis.environment.serverID);
        //prefs.set("serverURL", wso2vis.environment.serverURL);
        prefs.set("selectedTab", 1);
    }
}

function drawFaultDiagram() {
    if (wso2vis.environment.operationName === "") {
        operationFilter.filterArray([]);    
    }
    if (intialized) {
        prefs.set("operation", wso2vis.environment.operationName);
        prefs.set("selectedTab", 2);
    }
}

function endpointsChartTooltip(data, index) {
    return data["@name"] + " - " + data["stats"][index]["@name"] + ": " + data["stats"][index]["@count"];
}

function endpointsChartClick(data, index) {
    operationLineChart.clear();
    endpointFilter.filterArray([data["@name"]]);
    wso2vis.environment.endpointName = data["@name"];
    tabs.setSelectedTab(1);
    dataProvider.pullData();
}

function operationsChartTooltip(data, index) {
    return data["@name"] + " - " + data["stats"][index]["@name"] + ": " + data["stats"][index]["@count"];
}

function operationsChartClick(data, index) {
    operationLineChart.clear();
    operationFilter.filterArray([data["@name"]]);
    wso2vis.environment.operationName = data["@name"];
    tabs.setSelectedTab(2);
    dataProvider.pullData();
}

wso2vis.fn.selectFormChanged = function(i) {
    elem = document.getElementById("wso2visSelect_"+i);
    var server = elem[elem.selectedIndex].text;
    dataProvider.url = "carbon/gauges/gadgets/data/flashdata-ajaxprocessor.jsp?funcName=op-"+server;
    dataProvider.pullDataSync();
};

function operationLineChartTooltip(data) {
    return data["@name"];
}

function showConfig() {
    //timer.stopTimer();                                
    //dataFilterDialog.load();
}

//-----------------------

function configOnApply(data) {
    // save pref
    if (data != null && data.length > 0) {
        var arr = data[0];
        if (data.length > 1) {
          for (var i = 1; i < data.length; i++) {
            arr += ',' + data[i];
          }
        }
    }
    prefs.set("filteredArray", arr); 
    prefs.set("serverID", serverID);
    prefs.set("serverURL", serverURL);
    drawDiagram();            
}

function configOnCancel() {
    drawDiagram();
}

function showHelp() {
    if (intialized)
        prefs.set("selectedTab", 3);
    clientSideInclude("disp_help", "registry/resource/_system/config/repository/dashboards/gadgets/help/operation-level-drill-down.html");
}

// Registering onload handler
gadgets.util.registerOnLoadHandler(initialize);		  
</script>
]]>
</Content>
</Module>
