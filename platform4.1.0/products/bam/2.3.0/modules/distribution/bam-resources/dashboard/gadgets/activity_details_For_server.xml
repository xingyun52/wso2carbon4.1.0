<?xml version="1.0" encoding="UTF-8" ?>
<Module>
  <ModulePrefs title="Server Details" height="500" width="500"
description="Server Details" author="Dinithi Nallaperuma"
author_email="carbon-dev@wso2.org" author_affiliation="WSO2"
author_location="Colombo, Sri Lanka">
<Require feature="setprefs"/>
<Require feature="tabs"/>
<Require feature="dynamic-height"/>
<Require feature="views"/>
  </ModulePrefs>
  <UserPref name="activityID" display_name="Activity Name"
default_value="" datatype="string"></UserPref>
  <Content type="html" view="default">

<![CDATA[
<style>
table.activity {
  font-family: verdana,arial,sans-serif;
  font-size:11px;
  color:#333333;
  border-width: 1px;
  border-color: #666666;
  border-collapse: collapse;
}
table.activity th {
  border-width: 1px;
  padding: 1px;
  border-style: solid;
  border-color: #666666;
  background-color: #6495ED;
}
table.activity td {
  border-width: 1px;
  padding: 1px;
  border-style: solid;
  border-color: #666666;
  background-color: #D6E6FE;
}
</style>

<script type="text/javascript" src="swfobject1-5/swfobject.js"></script>
<script type="text/javascript" src="encoder-decoder.js"></script>
<script type="text/javascript" src="js/jquery-1.4.4.min.js"></script>
<script type="text/javascript" src="js/wso2.js"></script>
<script type="text/javascript" src="js/wso2.xml.js"></script>
<script type="text/javascript" src="js/wso2.xml.axiom.js"></script>
<script type="text/javascript" src="js/retrieve-data.js"></script>
<script type="text/javascript" src="js/help-populator.js"></script>
 <link rel="stylesheet" type="text/css" href="css/gadgets.css"/>
<link rel="stylesheet" type="text/css" href="css/help.css"/>
<div id="disp_config" style="display:none;height:300px;">
  <table class="main-table">
  <tr>
<td><div id="select_boxes">
  <table>
  <tr>

<td><div id="server_select_box">
<select id="activities" onmousedown="loadServerList();">
<option value="">--Server--</option>
</select>
 </div>
</td>
   <td><!--div id="demo_div"  style="display:none;">
  <input type="checkbox" name="demo_mode" id="demo_mode_id">
 </div--></td>
  </tr>
  </table>
</div></td>
  </tr>
  <tr></tr>
  </table>
</div>
<div id="main_disp" style="display:none;height:300px;width=500px;">
  <div id="disp_title" class="titleText"></div>
  <div id="graph" class="pleaseText"></div>
</div>
<div id="disp_help" style="display:none;height:300px;width=500px;">
</div>
<script type="text/javascript">

// Loading Gadget configuration
var prefs = new _IG_Prefs(__MODULE_ID__);
   serverID = prefs.getString("serverID");
serverUrl = prefs.getString("serverUrl");

// Adding Tabs
var tabs = new gadgets.TabSet(__MODULE_ID__, "Display");
tabs.addTab("Display", {
 contentContainer: document.getElementById("main_disp"),
 callback: drawDiagram
  });

tabs.addTab("Configure", "disp_config");
tabs.addTab("Help", {
 contentContainer: document.getElementById("disp_help"),
 callback: showHelp
  });

function showHelp() {

  clientSideInclude("disp_help", "registry/resource/_system/config/repository/dashboards/gadgets/help/Activity-details-for-server-gadget.html");;
}

function drawDiagram(){

serverID = prefs.getString("serverID");
  serverUrl = prefs.getString("serverURL");
var demo = 0;


  var contentEl = document.getElementById("graph");
  contentEl.innerHTML = "";

  var titleEl = document.getElementById("disp_title");
  titleEl.innerHTML = "";

  if(serverID=="" ){
  contentEl.innerHTML = "Please use the 'Configure' tab to select a Activity to monitor.";
  }else{
  var urlTail = "";
// Set display title
   titleEl.innerHTML = "Activity : <strong>" + serverUrl + "</strong>";
urlTail = serverUrl;

// Set display title
titleEl.innerHTML = "<strong>Monitoring operations information for " + serverUrl + "</strong>";

var dataURL = "carbon/gauges/gadgets/flash/flashdata-ajaxprocessor.jsp?funcName=getActivityDetailsForServer&serverURL=" + urlTail;
getActivityDetailList(dataURL);

  }
   gadgets.window.adjustHeight();
}

  function getActivityDetailList(dataURL) {
var xmlHttpReq = createXmlHttpRequest();
var opList = [];
// Make sure the XMLHttpRequest object was instantiated
if (xmlHttpReq)
{
  // This is a synchronous POST, hence UI blocking.
  xmlHttpReq.open("GET", dataURL + "&ms=" + new Date().getTime(), false);
  xmlHttpReq.send(null);

  if (xmlHttpReq.status == 200) {
var xmlobj = parseXml(removeCarriageReturns(xmlHttpReq.responseText));

var contentEl = document.getElementById("graph");
contentEl.innerHTML = "";
var htmltext = "<br /><br />"
   // var childNode = xmlobj.getElementsByTagName("level0")[0].getElementsByTagName("dataSet0")[0].getElementsByTagName("OperationName")[0].textContent;


var html = '';
html +='<table class=\"activity\" width=80% align="center">';
html +='<th>Operation</th><th>TimeStamp</th>';
for(var a = 0;a < xmlobj.childNodes[0].childNodes.length; a++){
html +='<tr>';
for(var b = (xmlobj.childNodes[0].childNodes[a].childNodes.length-1); b >= 0; b--){
html +='<td>'+xmlobj.childNodes[0].childNodes[a].childNodes[b].textContent+'</td>';

}
html +='</tr>';
}

html +='</table>';

contentEl.innerHTML = html;
  }

  return false;
}
return false;
  }


  function parseXml(xml) {
var dom = null;
if (window.DOMParser) {
  try {
dom = (new DOMParser()).parseFromString(xml, "text/xml");
  }
  catch (e) { dom = null; }
}
else if (window.ActiveXObject) {
  try {
dom = new ActiveXObject('Microsoft.XMLDOM');
dom.async = false;
if (!dom.loadXML(xml)) // parse error ..
  window.alert(dom.parseError.reason + dom.parseError.srcText);
  }
  catch (e) { dom = null; }
}
else
  window.alert("oops");
return dom;
  }

// Registering onload handler
gadgets.util.registerOnLoadHandler(loadServerList);
</script>
  ]]>
  </Content>

  <Content type="html" view="canvas">

<![CDATA[
<style>
table.activity {
  font-family: verdana,arial,sans-serif;
  font-size:11px;
  color:#333333;
  border-width: 1px;
  border-color: #666666;
  border-collapse: collapse;
}
table.activity th {
  border-width: 1px;
  padding: 1px;
  border-style: solid;
  border-color: #666666;
  background-color: #6495ED;
}
table.activity td {
  border-width: 1px;
  padding: 1px;
  border-style: solid;
  border-color: #666666;
  background-color: #D6E6FE;
}
</style>

<script type="text/javascript" src="swfobject1-5/swfobject.js"></script>
<script type="text/javascript" src="encoder-decoder.js"></script>
<script type="text/javascript" src="js/jquery-1.4.4.min.js"></script>
<script type="text/javascript" src="js/wso2.js"></script>
<script type="text/javascript" src="js/wso2.xml.js"></script>
<script type="text/javascript" src="js/wso2.xml.axiom.js"></script>
<script type="text/javascript" src="js/retrieve-data.js"></script>
<script type="text/javascript" src="js/help-populator.js"></script>
 <link rel="stylesheet" type="text/css" href="css/gadgets.css"/>
<link rel="stylesheet" type="text/css" href="css/help.css"/>
<div id="disp_config" style="display:none;height:300px;">
  <table class="main-table">
  <tr>
<td><div id="select_boxes">
  <table>
  <tr>

<td><div id="server_select_box">
<select id="activities" onmousedown="loadServerList();">
<option value="">--Server--</option>
</select>
 </div>
</td>
   <td><!--div id="demo_div"  style="display:none;">
  <input type="checkbox" name="demo_mode" id="demo_mode_id">
 </div--></td>
  </tr>
  </table>
</div></td>
  </tr>
  <tr></tr>
  </table>
</div>
<div id="main_disp" style="display:none;height:300px;width=500px;">
  <div id="disp_title" class="titleText"></div>
  <div id="graph" class="pleaseText"></div>
</div>
<div id="disp_help" style="display:none;height:300px;width=500px;">
</div>
<script type="text/javascript">

// Loading Gadget configuration
var prefs = new _IG_Prefs(__MODULE_ID__);
   serverID = prefs.getString("serverID");
serverUrl = prefs.getString("serverUrl");

// Adding Tabs
var tabs = new gadgets.TabSet(__MODULE_ID__, "Display");
tabs.addTab("Display", {
 contentContainer: document.getElementById("main_disp"),
 callback: drawDiagram
  });

tabs.addTab("Configure", "disp_config");
tabs.addTab("Help", {
 contentContainer: document.getElementById("disp_help"),
 callback: showHelp
  });

function showHelp() {

  clientSideInclude("disp_help", "registry/resource/_system/config/repository/dashboards/gadgets/help/Activity-details-for-server-gadget.html");;
}

function drawDiagram(){

serverID = prefs.getString("serverID");
  serverUrl = prefs.getString("serverURL");
var demo = 0;


  var contentEl = document.getElementById("graph");
  contentEl.innerHTML = "";

  var titleEl = document.getElementById("disp_title");
  titleEl.innerHTML = "";

  if(serverID=="" ){
  contentEl.innerHTML = "Please use the 'Configure' tab to select a Activity to monitor.";
  }else{
  var urlTail = "";
// Set display title
   titleEl.innerHTML = "Activity : <strong>" + serverUrl + "</strong>";
urlTail = serverUrl;

// Set display title
titleEl.innerHTML = "<strong>Monitoring operations information for " + serverUrl + "</strong>";

var dataURL = "carbon/gauges/gadgets/flash/flashdata-ajaxprocessor.jsp?funcName=getActivityDetailsForServer&serverURL=" + urlTail;
getActivityDetailList(dataURL);

  }
   gadgets.window.adjustHeight();
}

  function getActivityDetailList(dataURL) {
var xmlHttpReq = createXmlHttpRequest();
var opList = [];
// Make sure the XMLHttpRequest object was instantiated
if (xmlHttpReq)
{
  // This is a synchronous POST, hence UI blocking.
  xmlHttpReq.open("GET", dataURL + "&ms=" + new Date().getTime(), false);
  xmlHttpReq.send(null);

  if (xmlHttpReq.status == 200) {
var xmlobj = parseXml(removeCarriageReturns(xmlHttpReq.responseText));

var contentEl = document.getElementById("graph");
contentEl.innerHTML = "";
var htmltext = "<br /><br />"

   // var childNode = xmlobj.getElementsByTagName("level0")[0].getElementsByTagName("dataSet0")[0].getElementsByTagName("OperationName")[0].textContent;


var html = '';
html +='<table class=\"activity\" width=80% align="center">';
html +='<th>Operation</th><th>TimeStamp</th>';
for(var a = 0;a < xmlobj.childNodes[0].childNodes.length; a++){
html +='<tr>';

for(var b = (xmlobj.childNodes[0].childNodes[a].childNodes.length-1); b >= 0; b--){
html +='<td>'+xmlobj.childNodes[0].childNodes[a].childNodes[b].textContent+'</td>';

}
html +='</tr>';
}

html +='</table>';

contentEl.innerHTML = html;
  }

  return false;
}
return false;
  }


  function parseXml(xml) {
var dom = null;
if (window.DOMParser) {
  try {
dom = (new DOMParser()).parseFromString(xml, "text/xml");
  }
  catch (e) { dom = null; }
}
else if (window.ActiveXObject) {
  try {
dom = new ActiveXObject('Microsoft.XMLDOM');
dom.async = false;
if (!dom.loadXML(xml)) // parse error ..
  window.alert(dom.parseError.reason + dom.parseError.srcText);
  }
  catch (e) { dom = null; }
}
else
  window.alert("oops");
return dom;
  }

// Registering onload handler
gadgets.util.registerOnLoadHandler(loadServerList);
</script>
  ]]>
  </Content>

</Module>

