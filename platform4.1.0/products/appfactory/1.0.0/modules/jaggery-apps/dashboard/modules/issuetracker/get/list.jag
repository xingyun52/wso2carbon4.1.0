<%
include("/jagg/jagg.jag");
include("/jagg/constants.jag");
include("/jagg/config_reader.jag");

var log = new Log();
var modManager = jagg.module("manager");

var getIssuesWithParameters = function(queryString) {
    var ws = require('ws');
    var request = new ws.WSRequest();
    var options = new Array();
    options.useSOAP = 1.1;
    options.action = "urn:getAllIssuesWithParameters";
    var payload = '<p:getAllIssuesWithParameters xmlns:p="http://service.issuetracking.appfactory.carbon.wso2.org">\
                <xs:queryString xmlns:xs="http://service.issuetracking.appfactory.carbon.wso2.org">' + queryString + '</xs:queryString>\
                </p:getAllIssuesWithParameters>';

    try {
        var endPoint = getProperty(APPFACTORY_SERVER_URL) + 'IssueTrackerService';
        request.open(options, endPoint, false, getProperty(ADMIN_USERNAME), getProperty(ADMIN_PASSWORD));
        request.send(payload);
        result = request.responseE4X;

        var ns = new Namespace("http://service.issuetracking.appfactory.carbon.wso2.org");
        var ax239 = new Namespace("http://beans.issuetracking.appfactory.carbon.wso2.org/xsd");

        var resultElems = result.ns::["return"];

        return resultElems;
    } catch (e) {
        log.error("Error while getting issues");
    }
}

var getCountForIssuesWithParameters = function(queryString) { 
    try {
        var resultElems =getIssuesWithParameters(queryString);
        return resultElems.length();
    } catch (e) {
        log.error("Error while getting issues count");
    }
}

var getIssueCountsByStatus = function() {
    var issues = [];
    var newIssueCount = getCountForIssuesWithParameters("status_id=1");
    var inProgressIssueCount = getCountForIssuesWithParameters("status_id=2");
    var resolvedIssueCount = getCountForIssuesWithParameters("status_id=3");
    var feedbackIssueCount = getCountForIssuesWithParameters("status_id=4");
    var closedIssueCount = getCountForIssuesWithParameters("status_id=5");
    var rejectedIssueCount = getCountForIssuesWithParameters("status_id=6");
    issues.push(['New', newIssueCount]);
    issues.push(['In-progress', inProgressIssueCount]);
    issues.push(['Resolved', resolvedIssueCount]);
    issues.push(['Feedback', feedbackIssueCount]);
    issues.push(['Closed', closedIssueCount]);
    issues.push(['Rejected', rejectedIssueCount]);
    
    return issues;
}

var getIssueCountsByPriority = function() {
    var issues = [];
    issues.push(['Low', getCountForIssuesWithParameters("priority_id=1")]);
    issues.push(['Normal', getCountForIssuesWithParameters("priority_id=2")]);
    issues.push(['High ', getCountForIssuesWithParameters("priority_id=3")]);
    issues.push(['Urgent ', getCountForIssuesWithParameters("priority_id=4")]);
    issues.push(['Immediate ', getCountForIssuesWithParameters("priority_id=5")]);
  
    return issues;
}

var getReporterIssueCount = function(queryString) {
    var ws = require('ws');
    var request = new ws.WSRequest();
    var options = new Array();
    options.useSOAP = 1.1;
    options.action = "urn:getReporterIssueCount";
    var payload = '<p:getReporterIssueCount xmlns:p="http://service.issuetracking.appfactory.carbon.wso2.org"></p:getReporterIssueCount>';

    try {
        var endPoint = getProperty(APPFACTORY_SERVER_URL) + 'IssueTrackerService';
        request.open(options, endPoint, false, getProperty(ADMIN_USERNAME), getProperty(ADMIN_PASSWORD));
        request.send(payload);
        result = request.responseE4X;

        var ax247 = new Namespace("http://issuetracking.appfactory.carbon.wso2.org/xsd");

        var result = result.*::["return"];

		var elementsArray = new Array();

        for (var index in result) {
        	var userInfo = result[index]; 
        	
        	var name  = userInfo.ax247::["userName"].text();
        	var issueCount = userInfo.ax247::["issueCount"].text();

        	var innerElement = {};
        	innerElement.name = '' + name;
        	innerElement.issueCount = '' + issueCount;
        	
			elementsArray.push(innerElement);
        }
                
        return elementsArray;
    } catch (e) {
        log.error("Error while getting issues");
    }
}

var getAssignerIssueCount = function(queryString) {
    var ws = require('ws');
    var request = new ws.WSRequest();
    var options = new Array();
    options.useSOAP = 1.1;
    options.action = "urn:getAssignerIssueCount";
    var payload = '<p:getAssignerIssueCount xmlns:p="http://service.issuetracking.appfactory.carbon.wso2.org"></p:getAssignerIssueCount>';

    try {
        var endPoint = getProperty(APPFACTORY_SERVER_URL) + 'IssueTrackerService';
        request.open(options, endPoint, false, getProperty(ADMIN_USERNAME), getProperty(ADMIN_PASSWORD));
        request.send(payload);
        result = request.responseE4X;

        var ax247 = new Namespace("http://issuetracking.appfactory.carbon.wso2.org/xsd");

        var result = result.*::["return"];

		var elementsArray = new Array();

        for (var index in result) {
        	var userInfo = result[index]; 
        	
        	var name  = userInfo.ax247::["userName"].text();
        	var issueCount = userInfo.ax247::["issueCount"].text();

        	var innerElement = {};
        	innerElement.name = '' + name;
        	innerElement.issueCount = '' + issueCount;
        	
			elementsArray.push(innerElement);
        }
                
        return elementsArray;
    } catch (e) {
        log.error("Error while getting issues");
    }
}

%>
