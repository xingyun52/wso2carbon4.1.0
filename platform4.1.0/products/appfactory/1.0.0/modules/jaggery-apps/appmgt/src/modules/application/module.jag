<%
jagg.module("application", {

    createApplication:function () {
        return jagg.require(jagg.getModulesDir() + "application/add/add.jag").createApplication.apply(this, arguments);
    },
    
    createRepository:function () {
        return jagg.require(jagg.getModulesDir() + "application/add/add.jag").createRepository.apply(this, arguments);
    },
    
    getEventInfoOfApplications:function () {
        return jagg.require(jagg.getModulesDir() + "application/get/list.jag").getEventInfoOfApplications.apply(this, arguments);
    },
    
	getAllAppsOfUser:function () {
        return jagg.require(jagg.getModulesDir() + "application/get/list.jag").getAllAppsOfUser.apply(this, arguments);
    },
    
    getAppInfo:function () {
        return jagg.require(jagg.getModulesDir() + "application/get/list.jag").getAppInfo.apply(this, arguments);
    },
    
    getAllAppVersionsInStage:function () {
        return jagg.require(jagg.getModulesDir() + "application/get/list.jag").getAllAppVersionsInStage.apply(this, arguments);
    },
    
   	getAppVersionsInStage:function () {
        return jagg.require(jagg.getModulesDir() + "application/get/list.jag").getAppVersionsInStage.apply(this, arguments);
    },
    
    getAllStages:function () {
        return jagg.require(jagg.getModulesDir() + "application/get/list.jag").getAllStages.apply(this, arguments);
    },
    
    getAllAppVersionsInStages:function () {
        return jagg.require(jagg.getModulesDir() + "application/get/list.jag").getAllAppVersionsInStages.apply(this, arguments);
    },
    
    getRetiredVersions:function () {
        return jagg.require(jagg.getModulesDir() + "application/get/list.jag").getRetiredVersions.apply(this, arguments); 
    },
    
    getAppVersionsInStages:function () {
        return jagg.require(jagg.getModulesDir() + "application/get/list.jag").getAppVersionsInStages.apply(this, arguments);
    },
    
    getAppCountInStage:function () {
        return jagg.require(jagg.getModulesDir() + "application/get/list.jag").getAppCountInStage.apply(this, arguments);
    },

	getAppUsersWithRoles:function () {
        return jagg.require(jagg.getModulesDir() + "application/users/get/list.jag").getAppUsersWithRoles.apply(this, arguments);
    },

    getRoles:function () {
        return jagg.require(jagg.getModulesDir() + "application/users/get/list.jag").getRoles.apply(this, arguments);
    },
    
    getUsers:function () {
        return jagg.require(jagg.getModulesDir() + "application/users/get/list.jag").getUsers.apply(this, arguments);
    },
    
    getUsersInfoOfApplication:function () {
        return jagg.require(jagg.getModulesDir() + "application/users/get/list.jag").getUsersInfoOfApplication.apply(this, arguments);
    },
    
    getUserAccess:function () {
        return jagg.require(jagg.getModulesDir() + "application/users/get/list.jag").getUserAccess.apply(this, arguments);
    },
    
    getUserRolesForApplication:function () {
        return jagg.require(jagg.getModulesDir() + "application/users/get/list.jag").getUserRolesForApplication.apply(this, arguments);
    },
    
    getMetaDataForApplicationState:function () {
        return jagg.require(jagg.getModulesDir() + "application/get/list.jag").getMetaDataForApplicationState.apply(this, arguments);
    },
    getTrunkURL:function () {
        return jagg.require(jagg.getModulesDir() + "application/users/get/list.jag").getTrunkURL.apply(this, arguments);
    },
    addUserToApplication:function () {
        return jagg.require(jagg.getModulesDir() + "application/users/add/add.jag").addUserToApplication.apply(this, arguments);
    },
    
    addUserToApplicationWS:function () {
        return jagg.require(jagg.getModulesDir() + "application/users/add/add.jag").addUserToApplicationWS.apply(this, arguments);
    },
    isApplicationKeyAvailable:function () {
            return jagg.require(jagg.getModulesDir() + "application/add/add.jag").isApplicationKeyAvailable.apply(this, arguments);
    },
	editAppInfo:function () {
            return jagg.require(jagg.getModulesDir() + "application/update/update.jag").editAppInfo.apply(this, arguments);
    },
    getLatestBuildSuccessInfo:function () {
        return jagg.require(jagg.getModulesDir() + "application/get/list.jag").getLatestBuildSuccessInfo.apply(this, arguments);
	}	
    
    
});
%>