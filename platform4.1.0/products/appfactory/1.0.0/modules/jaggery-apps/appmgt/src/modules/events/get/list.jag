<%
include("/jagg/jagg.jag");
include("/jagg/constants.jag");
include("/jagg/config_reader.jag");

var log = new Log();
var modManager = jagg.module("manager");

// Get Events
var getEvents = function (applicationKey, userName) {

    var ws = require("ws");
    var buildService = new ws.WSRequest();
    var options = new Array();
    options.useSOAP = 1.2;
    options.action = "urn:getEventsForApplications";
    options["HTTPHeaders"] = [
        { name : "Cookie", value :modManager.getAdminCookie() }
    ];

    var payload = '<p:getEventsForApplications xmlns:p="http://service.notification.events.appfactory.carbon.wso2.org"><p:appIDs>' + applicationKey + '</p:appIDs><p:userName>' + userName + '</p:userName></p:getEventsForApplications>';
    var result;

    try {
        var endPoint = getProperty(APPFACTORY_SERVER_URL) + "EventNotificationService";
        buildService.open(options, endPoint, false);
        buildService.send(payload);
        result = buildService.responseE4X;

        var ns = new Namespace("http://service.notification.events.appfactory.carbon.wso2.org");
        var ax227 = new Namespace("http://service.notification.events.appfactory.carbon.wso2.org/xsd");

        result = result.ns::["return"];

       var elementsArray = new Array();

		for (var eventData in result) {
        	var eventInfo = result[eventData];

        	var applicationId  = eventInfo.ax227::["applicationId"].text();
        	var event = eventInfo.ax227::["event"].text();
        	var eventResult = eventInfo.ax227::["result"].text();


        	var innerElement = {};
        	innerElement.applicationId = applicationId;
        	innerElement.event = event;
        	innerElement.eventResult = eventResult;

			elementsArray.push(innerElement);
		}

        return elementsArray;

    } catch (e) {
        log.error("Error while getting event stream \n" + e.message);
        throw "Error while getting event stream";
    }

};
var getUserEvents = function (userName) {

    var ws = require("ws");
    var getUserEventsReq = new ws.WSRequest();
    var options = new Array();
    options.useSOAP = 1.2;
    options.action = "urn:getEventsOfUser";
    options["HTTPHeaders"] = [
        { name : "Cookie", value :modManager.getAdminCookie() }
    ];

    var payload = '<p:getEventsOfUser xmlns:p="http://service.notification.events.appfactory.carbon.wso2.org"><p:userName>' + userName + '</p:userName></p:getEventsOfUser>';
    var result;

    try {
        var endPoint = getProperty(APPFACTORY_SERVER_URL) + "EventNotificationService";
        getUserEventsReq.open(options, endPoint, false);
        getUserEventsReq.send(payload);
        result = getUserEventsReq.responseE4X;

        var ns = new Namespace("http://service.notification.events.appfactory.carbon.wso2.org");
        var ax227 = new Namespace("http://service.notification.events.appfactory.carbon.wso2.org/xsd");

        result = result.ns::["return"];

       var elementsArray = new Array();

		for (var eventData in result) {
        	var eventInfo = result[eventData];

        	var userId  = eventInfo.ax227::["userId"].text();
        	var event = eventInfo.ax227::["event"].text();
        	var eventResult = eventInfo.ax227::["result"].text();


        	var innerElement = {};
        	innerElement.userId = userId;
        	innerElement.event = event;
        	innerElement.eventResult = eventResult;

			elementsArray.push(innerElement);
		}

        return elementsArray;

    } catch (e) {
        log.error("Error while getting event stream \n" + e.message);
        throw "Error while getting event stream";
    }
}

%>
