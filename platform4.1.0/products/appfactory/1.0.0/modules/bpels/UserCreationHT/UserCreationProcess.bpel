<!-- UserCreationProcess BPEL Process [Generated by the Eclipse BPEL Designer] -->
<!-- Date: Mon Mar 05 12:13:11 IST 2012 -->
<bpel:process name="UserCreationProcess" targetNamespace="http://wso2.org"
	suppressJoinFailure="yes" xmlns:tns="http://wso2.org"
	xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
	xmlns:ns="http://services.registration.user.appfactory.carbon.wso2.org"
	xmlns:dinvk="http://www.wso2.org/humantask/dumyinvokeservice.wsdl"
	xmlns:b4p="http://docs.oasis-open.org/ns/bpel4people/bpel4people/200803"
	xmlns:claimsns="http://www.example.com/claims/" xmlns:claimsschemans="http://www.example.com/claims/schema"
	queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0"
	expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://www.wso2.org/humantask/dummyinvokeservice.wsdl" xmlns:xsd1="http://beans.registration.user.appfactory.carbon.wso2.org/xsd">

	<!-- BPEL4People extension activity -->
	<bpel:extensions>
		<bpel:extension
			namespace="http://docs.oasis-open.org/ns/bpel4people/bpel4people/200803"
			mustUnderstand="yes" />
	</bpel:extensions>

	<!-- Import the client WSDL -->
    <bpel:import namespace="http://wso2.org" location="UserActivationProcessArtifacts.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
    <bpel:import
		namespace="http://services.registration.user.appfactory.carbon.wso2.org"
		location="EmailSenderService.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
	<bpel:import
		namespace="http://services.registration.user.appfactory.carbon.wso2.org"
		location="UserRegistrationService.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
	<bpel:import location="UserCreationProcessArtifacts.wsdl"
		namespace="http://wso2.org" importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
	<bpel:import location="UserApprovalTask.wsdl" namespace="http://www.example.com/claims/"
		importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
	<bpel:import location="DummyInvokeService.wsdl"
		namespace="http://www.wso2.org/humantask/dummyinvokeservice.wsdl"
		importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>

	<!-- ================================================================= -->
	<!-- PARTNERLINKS -->
	<!-- List of services participating in this BPEL process -->
	<!-- ================================================================= -->
	<bpel:partnerLinks>
		<!-- The 'client' role represents the requester of this service. -->
		<bpel:partnerLink name="client" partnerLinkType="tns:UserCreationProcess"
			myRole="UserCreationProcessProvider" />
		<bpel:partnerLink name="UserRegistrationServicePL"
			partnerLinkType="tns:UserRegistrationServicePLType" partnerRole="userRegistrationRole"></bpel:partnerLink>
		<bpel:partnerLink name="EmailSenderServicePL"
			partnerLinkType="tns:EmailSenderServicePLType" partnerRole="EmailSenderRole"></bpel:partnerLink>
		<bpel:partnerLink name="b4pPartnerLink"
			partnerLinkType="tns:b4pPartnerLinkType" partnerRole="hi" myRole="bpel"></bpel:partnerLink>
		<bpel:partnerLink name="dummyInvokePLink"
			partnerLinkType="tns:DummyInvokePartnerLinkType" partnerRole="dummy"></bpel:partnerLink>
        <bpel:partnerLink name="ActivateuserPL" partnerLinkType="tns:ActivateuserPLT" partnerRole="userActivateRole"></bpel:partnerLink>
    </bpel:partnerLinks>

	<!-- ================================================================= -->
	<!-- VARIABLES -->
	<!-- List of messages and XML documents used within this BPEL process -->
	<!-- ================================================================= -->
	<bpel:variables>
		<!-- Reference to the message passed as input during initiation -->
		<bpel:variable name="input"
			messageType="tns:UserCreationProcessRequestMessage" />

		<!-- Reference to the message that will be returned to the requester -->
		<bpel:variable name="output"
			messageType="tns:UserCreationProcessResponseMessage" />
		<bpel:variable name="UserRegistrationServicePLResponse"
			messageType="ns:doesUserExistResponse"></bpel:variable>
		<bpel:variable name="UserRegistrationServicePLRequest"
			messageType="ns:doesUserExistRequest"></bpel:variable>
		<bpel:variable name="UserRegistrationServicePLResponse1"
			messageType="ns:registerUserResponse"></bpel:variable>
		<bpel:variable name="UserRegistrationServicePLRequest1"
			messageType="ns:registerUserRequest"></bpel:variable>
		<bpel:variable name="EmailSenderServicePLResponse"
			messageType="ns:sendActivationEmailResponse"></bpel:variable>
		<bpel:variable name="EmailSenderServicePLRequest"
			messageType="ns:sendActivationEmailRequest"></bpel:variable>
		<bpel:variable name="fault" element="tns:processFault"></bpel:variable>

		<bpel:variable name="b4pInput" messageType="claimsns:UserApprovalRequest"></bpel:variable>
		<bpel:variable name="b4pOutput" messageType="claimsns:UserApprovalResponse"></bpel:variable>
		<bpel:variable name="b4pNInput"
			messageType="claimsns:UserApprovalNotificationRequest"></bpel:variable>
		<bpel:variable name="dummyVar" messageType="ns1:DummyInvokeMessage"></bpel:variable>
        <bpel:variable name="ActivateuserPLResponse" messageType="tns:UserActivationProcessResponseMessage"></bpel:variable>
        <bpel:variable name="ActivateuserPLRequest" messageType="tns:UserActivationProcessRequestMessage"></bpel:variable>
    </bpel:variables>

	<!-- ================================================================= -->
	<!-- ORCHESTRATION LOGIC -->
	<!-- Set of activities coordinating the flow of messages across the -->
	<!-- services integrated within this business process -->
	<!-- ================================================================= -->
	<bpel:sequence name="main">
		<!-- Receive input from requester. Note: This maps to operation defined 
			in UserCreationProcess.wsdl -->
		<bpel:receive name="receiveInput" partnerLink="client"
			portType="tns:UserCreationProcess" operation="process" variable="input"
			createInstance="yes" />

		<!-- Generate reply to synchronous request -->
		<bpel:assign validate="no" name="AssignUserName">
			<bpel:copy>
				<bpel:from>
					<bpel:literal xml:space="preserve"><ns:doesUserExist
						xmlns:ns="http://services.registration.user.appfactory.carbon.wso2.org">
							<ns:userName></ns:userName>
							</ns:doesUserExist></bpel:literal>
				</bpel:from>
				<bpel:to part="parameters" variable="UserRegistrationServicePLRequest"></bpel:to>
			</bpel:copy>
			<bpel:copy>
				<bpel:from part="payload" variable="input">
					<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:userName]]></bpel:query>
				</bpel:from>
				<bpel:to part="parameters" variable="UserRegistrationServicePLRequest">
					<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:userName]]></bpel:query>
				</bpel:to>
			</bpel:copy>
		</bpel:assign>
		<bpel:invoke name="InvokeDoesUserExist" partnerLink="UserRegistrationServicePL"
			operation="doesUserExist" portType="ns:UserRegistrationServicePortType"
			inputVariable="UserRegistrationServicePLRequest" outputVariable="UserRegistrationServicePLResponse">
			<bpel:catch>
				<bpel:sequence>
                    <bpel:throw name="ThrowException" faultName="tns:UserCreationFailed"></bpel:throw>
				</bpel:sequence>
			</bpel:catch>
		</bpel:invoke>

		<bpel:sequence name="Sequence">
			<bpel:if name="IfUserNameAvailable">
				<bpel:condition><![CDATA[$UserRegistrationServicePLResponse.parameters/ns:return='false']]></bpel:condition>
				<bpel:sequence name="Sequence-success">
					<bpel:sequence name="b4p-sequence">
						<bpel:assign validate="no" name="initialiseB4PInputVar">
							<bpel:copy>
								<bpel:from>
									<bpel:literal xml:space="preserve"><tschema:UserApprovalData
										xmlns:tschema="http://www.example.com/claims/schema"
										xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  											<tschema:userName>tschema:userName</tschema:userName>
  											<tschema:firstName>tschema:firstName</tschema:firstName>
  											<tschema:lastName>tschema:lastName</tschema:lastName>
  											<tschema:email>tschema:email</tschema:email>
  											</tschema:UserApprovalData></bpel:literal>
								</bpel:from>
								<bpel:to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                        <![CDATA[$b4pInput.UserApprovalRequest]]>
								</bpel:to>
							</bpel:copy>
							<bpel:copy>
								<bpel:from expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                        <![CDATA[$input.payload/tns:userName]]>
								</bpel:from>
								<bpel:to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                        <![CDATA[$b4pInput.UserApprovalRequest/claimsschemans:userName]]>
								</bpel:to>
							</bpel:copy>
							<bpel:copy>
								<bpel:from expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                        <![CDATA[$input.payload/tns:firstName]]>
								</bpel:from>
								<bpel:to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                        <![CDATA[$b4pInput.UserApprovalRequest/claimsschemans:firstName]]>
								</bpel:to>
							</bpel:copy>
							<bpel:copy>
								<bpel:from expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                        <![CDATA[$input.payload/tns:lastName]]>
								</bpel:from>
								<bpel:to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                        <![CDATA[$b4pInput.UserApprovalRequest/claimsschemans:lastName]]>
								</bpel:to>
							</bpel:copy>
							<bpel:copy>
								<bpel:from expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                        <![CDATA[$input.payload/tns:email]]>
								</bpel:from>
								<bpel:to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                        <![CDATA[$b4pInput.UserApprovalRequest/claimsschemans:email]]>
								</bpel:to>
							</bpel:copy>
						</bpel:assign>
						<bpel:extensionActivity>
							<b4p:peopleActivity name="TaskB4PeopleActivity"
								inputVariable="b4pInput" outputVariable="b4pOutput" isSkipable="no">
								<b4p:remoteTask partnerLink="b4pPartnerLink"
									operation="approve" responseOperation="approvalResponse"></b4p:remoteTask>
							</b4p:peopleActivity>
						</bpel:extensionActivity>
						<bpel:assign validate="no" name="assign_b4pOutput">
							<bpel:copy>
								<bpel:from expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">                        
                        <![CDATA[$b4pOutput.UserApprovalResponse/claimsschemans:approved]]>
								</bpel:from>
								<bpel:to part="DummyInvokeMessagePart" variable="dummyVar"></bpel:to>
							</bpel:copy>
							<bpel:copy>
								<bpel:from part="payload" variable="input">
									<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                                        <![CDATA[tns:userName]]>
									</bpel:query>
								</bpel:from>
								<bpel:to part="DummyInvokeMessagePart" variable="dummyVar"></bpel:to>
							</bpel:copy>
						</bpel:assign>
					</bpel:sequence>
					<bpel:if name="IfUserRequestApproved">
						<bpel:condition expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[$b4pOutput.UserApprovalResponse/claimsschemans:approved='true']]></bpel:condition>
						<bpel:sequence name="UserApproval-Sequence">
							<bpel:sequence name="UserCreationSequence">
								<bpel:assign validate="no" name="AssignInputParams">
									<bpel:copy>
										<bpel:from>
											<bpel:literal xml:space="preserve"><ns:registerUser xmlns:ns="http://services.registration.user.appfactory.carbon.wso2.org">
												<ns:user>
												<s:adminPassword xmlns:s="http://beans.registration.user.appfactory.carbon.wso2.org/xsd"></s:adminPassword>
												<s:email xmlns:s="http://beans.registration.user.appfactory.carbon.wso2.org/xsd"></s:email>
												<s:firstName xmlns:s="http://beans.registration.user.appfactory.carbon.wso2.org/xsd"></s:firstName>
												<s:lastName xmlns:s="http://beans.registration.user.appfactory.carbon.wso2.org/xsd"></s:lastName>
												<s:userName xmlns:s="http://beans.registration.user.appfactory.carbon.wso2.org/xsd"></s:userName>
												</ns:user>
												</ns:registerUser></bpel:literal>
										</bpel:from>
										<bpel:to part="parameters" variable="UserRegistrationServicePLRequest1"></bpel:to>
									</bpel:copy>
									<bpel:copy>
										<bpel:from part="payload" variable="input">
											<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:userName]]></bpel:query>
										</bpel:from>
										<bpel:to part="parameters" variable="UserRegistrationServicePLRequest1">
                                            <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                                                <![CDATA[ns:user/xsd1:userName]]>
                                            </bpel:query>
                                        </bpel:to>
									</bpel:copy>
									<bpel:copy>
										<bpel:from part="payload" variable="input">
											<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:password]]></bpel:query>
										</bpel:from>
										<bpel:to part="parameters" variable="UserRegistrationServicePLRequest1">
                                            <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                                                <![CDATA[ns:user/xsd1:adminPassword]]>
                                            </bpel:query>
                                        </bpel:to>
									</bpel:copy>
									<bpel:copy>
										<bpel:from part="payload" variable="input">
											<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:email]]></bpel:query>
										</bpel:from>
										<bpel:to part="parameters" variable="UserRegistrationServicePLRequest1">
                                            <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                                                <![CDATA[ns:user/xsd1:email]]>
                                            </bpel:query>
                                        </bpel:to>
									</bpel:copy>
									<bpel:copy>
										<bpel:from part="payload" variable="input">
											<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:firstName]]></bpel:query>
										</bpel:from>
										<bpel:to part="parameters" variable="UserRegistrationServicePLRequest1">
                                            <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                                                <![CDATA[ns:user/xsd1:firstName]]>
                                            </bpel:query>
                                        </bpel:to>
									</bpel:copy>
									<bpel:copy>
										<bpel:from part="payload" variable="input">
											<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                                    <![CDATA[tns:lastName]]>
											</bpel:query>
										</bpel:from>
										<bpel:to part="parameters" variable="UserRegistrationServicePLRequest1">
                                            <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                                                <![CDATA[ns:user/xsd1:lastName]]>
                                            </bpel:query>
                                        </bpel:to>
									</bpel:copy>

								</bpel:assign>
								<bpel:invoke name="InvokeCreateUser" partnerLink="UserRegistrationServicePL"
									operation="registerUser" portType="ns:UserRegistrationServicePortType"
									inputVariable="UserRegistrationServicePLRequest1"
									outputVariable="UserRegistrationServicePLResponse1">
									<bpel:catch>
										<bpel:sequence>
											
											
                                            <bpel:throw name="ThrowException" faultName="tns:UserCreationFailed"></bpel:throw>
										</bpel:sequence>
									</bpel:catch>
								</bpel:invoke>
                                <bpel:if name="If">
                                    <bpel:condition expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[$input.payload/tns:sendEmail='true']]></bpel:condition>
                                    <bpel:sequence>
                                        <bpel:assign validate="no" name="AssignEmailParams">
									<bpel:copy>
										<bpel:from>
											<bpel:literal xml:space="preserve"><ns:sendActivationEmail xmlns:ns="http://services.registration.user.appfactory.carbon.wso2.org">
												<ns:userName></ns:userName>
												<ns:firstName></ns:firstName>
												<ns:activationKey></ns:activationKey>
												<ns:email></ns:email>
											</ns:sendActivationEmail></bpel:literal>
										</bpel:from>
										<bpel:to part="parameters" variable="EmailSenderServicePLRequest"></bpel:to>
									</bpel:copy>
									<bpel:copy>
										<bpel:from part="payload" variable="input">
											<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:userName]]></bpel:query>
										</bpel:from>
										<bpel:to part="parameters" variable="EmailSenderServicePLRequest">
											<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:userName]]></bpel:query>
										</bpel:to>
									</bpel:copy>
									<bpel:copy>
										<bpel:from part="payload" variable="input">
											<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:firstName]]></bpel:query>
										</bpel:from>
										<bpel:to part="parameters" variable="EmailSenderServicePLRequest">
											<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:firstName]]></bpel:query>
										</bpel:to>
									</bpel:copy>
									<bpel:copy>
										<bpel:from part="payload" variable="input">
											<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:email]]></bpel:query>
										</bpel:from>
										<bpel:to part="parameters" variable="EmailSenderServicePLRequest">
											<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:email]]></bpel:query>
										</bpel:to>
									</bpel:copy>
									<bpel:copy>
										<bpel:from part="parameters" variable="UserRegistrationServicePLResponse1">
											<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:return]]></bpel:query>
										</bpel:from>
										<bpel:to part="parameters" variable="EmailSenderServicePLRequest">
											<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:activationKey]]></bpel:query>
										</bpel:to>
									</bpel:copy>
								</bpel:assign>
                                        <bpel:invoke name="InvokeEmailSender" partnerLink="EmailSenderServicePL" operation="sendActivationEmail" portType="ns:EmailSenderServicePortType" inputVariable="EmailSenderServicePLRequest" outputVariable="EmailSenderServicePLResponse"><bpel:catch>
										<bpel:sequence>																					
                                            <bpel:throw name="ThrowException" faultName="tns:UserCreationFailed"></bpel:throw>
										</bpel:sequence>
									</bpel:catch>
								
                                        </bpel:invoke>
                                    </bpel:sequence>
                                <bpel:elseif>
                                        <bpel:condition expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[$input.payload/tns:sendEmail='false']]></bpel:condition>
                                        <bpel:sequence name="Sequence1">
                                            <bpel:assign validate="no" name="Assign-ActivateUser-Params">
                                                <bpel:copy>
                                                    <bpel:from>
                                                        <bpel:literal>
                                                            <tns:UserActivationProcessRequest xmlns:tns="http://wso2.org" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><tns:userName>tns:userName</tns:userName>
  <tns:confirmationKey>tns:confirmationKey</tns:confirmationKey>
  <tns:email>tns:email</tns:email>

                                                            </tns:UserActivationProcessRequest>
                                                        </bpel:literal>
                                                    </bpel:from>
                                                    <bpel:to variable="ActivateuserPLRequest" part="payload"></bpel:to>
                                                </bpel:copy>
                                                <bpel:copy>
                                                    <bpel:from part="payload" variable="input">
                                                        <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:userName]]></bpel:query>
                                                    </bpel:from>
                                                    <bpel:to part="payload" variable="ActivateuserPLRequest">
                                                        <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:userName]]></bpel:query>
                                                    </bpel:to>
                                                </bpel:copy>
                                                <bpel:copy>
                                                    <bpel:from part="parameters" variable="UserRegistrationServicePLResponse1">
                                                        <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                                                            <![CDATA[ns:return]]>
                                                        </bpel:query>
                                                    </bpel:from>
                                                    <bpel:to part="payload" variable="ActivateuserPLRequest">
                                                        <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                                                            <![CDATA[tns:confirmationKey]]>
                                                        </bpel:query>
                                                    </bpel:to>
                                                </bpel:copy>
                                                <bpel:copy>
                                                    <bpel:from part="payload" variable="input">
                                                        <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:email]]></bpel:query>
                                                    </bpel:from>
                                                    <bpel:to part="payload" variable="ActivateuserPLRequest">
                                                        <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:email]]></bpel:query>
                                                    </bpel:to>
                                                </bpel:copy>
                                            </bpel:assign>
                                            <bpel:invoke name="InvokeActivateUser" partnerLink="ActivateuserPL" operation="process" portType="tns:UserActivationProcess" inputVariable="ActivateuserPLRequest" outputVariable="ActivateuserPLResponse"></bpel:invoke>
                                            
                                        </bpel:sequence>
                                    </bpel:elseif></bpel:if>
                                
								
							</bpel:sequence>
						</bpel:sequence>
						<bpel:else>
							<bpel:sequence name="Sequencefailed">
								<bpel:assign validate="no" name="assignOutput">
									<bpel:copy>
										<bpel:from>
                                            <![CDATA[true()]]>
										</bpel:from>
										<bpel:to part="DummyInvokeMessagePart" variable="dummyVar"></bpel:to>
									</bpel:copy>
								</bpel:assign>
							</bpel:sequence>
						</bpel:else>
					</bpel:if>
				</bpel:sequence>
				<bpel:else>
					<bpel:sequence name="Sequence-failed">
						<bpel:throw name="ThrowException" faultName="tns:UserCreationFailed"></bpel:throw>
					</bpel:sequence>
				</bpel:else>
			</bpel:if>
		</bpel:sequence>
	</bpel:sequence>
</bpel:process>
