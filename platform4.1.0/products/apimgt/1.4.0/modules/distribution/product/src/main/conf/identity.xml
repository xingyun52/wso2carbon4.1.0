<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 ~ Copyright (c) 2005-2011, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~ WSO2 Inc. licenses this file to you under the Apache License,
 ~ Version 2.0 (the "License"); you may not use this file except
 ~ in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing,
 ~ software distributed under the License is distributed on an
 ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~ KIND, either express or implied.  See the License for the
 ~ specific language governing permissions and limitations
 ~ under the License.
 -->

<Server xmlns="http://wso2.org/projects/carbon/carbon.xml">

    <OpenIDServerUrl>https://localhost:9443/openidserver</OpenIDServerUrl>

    <OpenIDUserPattern>https://localhost:9443/openid/</OpenIDUserPattern>
    <!-- If the users must be prompted for approval -->
    <OpenIDSkipUserConsent>false</OpenIDSkipUserConsent>
    <!-- Expiry time of the OpenID RememberMe token in minutes -->
    <OpenIDRememberMeExpiry>7200</OpenIDRememberMeExpiry>

    <JDBCPersistenceManager>
        <DataSource>
            <!-- Include a data source name (jndiConfigName) from the set of data sources defined in master-datasources.xml -->
            <Name>jdbc/WSO2AM_DB</Name>
        </DataSource>
        <!-- If the identity database is created from another place and if it is required to skip schema initialization during the server start up, set the following
           property to "true". -->
        <SkipDBSchemaCreation>true</SkipDBSchemaCreation>
    </JDBCPersistenceManager>

    <!--
      Security configurations
    -->
    <Security>
        <UserTrustedRPStore>
            <Location>${carbon.home}/repository/resources/security/userRP.jks</Location>
            <!-- Keystore type (JKS/PKCS12 etc.)-->
            <Type>JKS</Type>
            <!-- Keystore password-->
            <Password>wso2carbon</Password>
            <!-- Private Key password-->
            <KeyPassword>wso2carbon</KeyPassword>
        </UserTrustedRPStore>

        <!--
              The directory under which all other KeyStore files will be stored
          -->
        <KeyStoresDir>${carbon.home}/conf/keystores</KeyStoresDir>
    </Security>

    <Identity>
        <IssuerPolicy>SelfAndManaged</IssuerPolicy>
        <TokenValidationPolicy>CertValidate</TokenValidationPolicy>
        <BlackList></BlackList>
        <WhiteList></WhiteList>
        <System>
            <KeyStore></KeyStore>
            <StorePass></StorePass>
        </System>
    </Identity>

    <OAuth>
        <RequestTokenUrl>https://localhost:9443/oauth/request-token</RequestTokenUrl>
        <AccessTokenUrl>https://localhost:9443/oauth/access-token</AccessTokenUrl>
        <AuthorizeUrl>https://localhost:9443/oauth/authorize-url</AuthorizeUrl>
        <!-- Default validity period for Authorization Code in seconds -->
        <AuthorizationCodeDefaultValidityPeriod>300</AuthorizationCodeDefaultValidityPeriod>
        <!-- Default validity period for Access Token in seconds -->
        <AccessTokenDefaultValidityPeriod>3600</AccessTokenDefaultValidityPeriod>
        <!-- Timestamp skew in seconds -->
        <TimestampSkew>300</TimestampSkew>
        <!-- Enable OAuth caching. This cache has the replication support. -->
        <EnableOAuthCache>true</EnableOAuthCache>
        <!-- Configure the security measures needs to be done prior to store the token in the database,
          such as hashing, encrypting, etc.-->
        <TokenPersistencePreprocessor>
            org.wso2.carbon.identity.oauth.preprocessor.PlainTextTokenPersistencePreprocessor
        </TokenPersistencePreprocessor>
        <!-- Supported Response Types -->
        <SupportedResponseTypes>code,token</SupportedResponseTypes>
        <!-- Supported Grant Types -->
        <SupportedGrantTypes>password,refresh_token,client_credentials,authorization_code</SupportedGrantTypes>
        <OAuthCallbackHandlers>
            <OAuthCallbackHandler Class="org.wso2.carbon.apimgt.keymgt.util.APIManagerOAuthCallbackHandler"/>
        </OAuthCallbackHandlers>

        <!-- Add custom user headers to the response-->
        <!--<RequiredRespHeaderClaimUris>
            <ClaimUri>http://wso2.org/claims/emailaddress</ClaimUri>
            <ClaimUri>http://wso2.org/claims/gender</ClaimUri>
        </RequiredRespHeaderClaimUris>-->

        <!-- Enable/Disable OAuth Caching-->
        <!--<EnableCache>true</EnableCache>-->

	<!-- Assertions can be used to embedd parameters into access token.-->
	<EnableAssertions>
		<UserName>false</UserName>
	</EnableAssertions>

	<!-- This should be set to true when using multiple user stores and keys should saved 
			into different tables according to the user store. By default all the application keys are saved in to the same table.
			UserName Assertion should be 'true' to use this.-->
	<EnableAccessTokenPartitioning>false</EnableAccessTokenPartitioning>

	<!-- user store domain names and mappings to new table names.
				eg: if you provide 'A:foo.com', foo.com should be the user store domain name and 'A' represent the relavant mapping of 
				token storing table, i.e. tokens relevant to the users comming from foo.com user store will be added to a table called
				IDN_OAUTH2_ACCESS_TOKEN_A. --> 
	<AccessTokenPartitioningDomains><!-- A:foo.com, B:bar.com --></AccessTokenPartitioningDomains>

	<AuthorizationContextTokenGeneration>		
		<Enabled>false</Enabled>
		<TokenGeneratorImplClass>org.wso2.carbon.identity.oauth2.authcontext.JWTTokenGenerator</TokenGeneratorImplClass>
		<ClaimsRetrieverImplClass>org.wso2.carbon.identity.oauth2.authcontext.DefaultClaimsRetriever</ClaimsRetrieverImplClass>
		<ConsumerDialectURI>http://wso2.org/claims</ConsumerDialectURI>
		<SignatureAlgorithm>SHA256withRSA</SignatureAlgorithm>
		<AuthorizationContextTTL>15</AuthorizationContextTTL>
	</AuthorizationContextTokenGeneration>

    	<SAML2Grant>
		<Issuers>https://localhost:9443/samlsso</Issuers>
		<TokenEndPoint>https://localhost:9443/oauth2endpoints/token</TokenEndPoint>
		<TokenEndPointAliases>tokenEP</TokenEndPointAliases>
		<Audience>https://localhost:9443/oauth2endpoints/token</Audience>
	</SAML2Grant>
    </OAuth>

    <MultifactorAuthentication>
        <XMPPSettings>
            <XMPPConfig>
                <XMPPProvider>gtalk</XMPPProvider>
                <XMPPServer>talk.google.com</XMPPServer>
                <XMPPPort>5222</XMPPPort>
                <XMPPExt>gmail.com</XMPPExt>
                <XMPPUserName>multifactor1@gmail.com</XMPPUserName>
                <XMPPPassword>wso2carbon</XMPPPassword>
            </XMPPConfig>
        </XMPPSettings>
    </MultifactorAuthentication>

    <SSOService>
        <IdentityProviderURL>https://localhost:9443/samlsso</IdentityProviderURL>
    </SSOService>

    <EntitlementSettings>
        <!-- Uncomment this to enable on-demand policy loading -->
        <!--OnDemandPolicyLoading>
                <Enable>true</Enable>
                <MaxInMemoryPolicies>100</MaxInMemoryPolicies>
        </OnDemandPolicyLoading-->
        <DecisionCaching>
            <Enable>true</Enable>
            <CachingInterval>36000</CachingInterval>
        </DecisionCaching>
        <AttributeCaching>
            <Enable>true</Enable>
        </AttributeCaching>
        <ThirftBasedEntitlementConfig>
            <EnableThriftService>true</EnableThriftService>
            <ReceivePort>${Ports.ThriftEntitlementReceivePort}</ReceivePort>
            <ClientTimeout>10000</ClientTimeout>
            <KeyStore>
                <Location>${carbon.home}/repository/resources/security/wso2carbon.jks</Location>
                <Password>wso2carbon</Password>
            </KeyStore>
        </ThirftBasedEntitlementConfig>
    </EntitlementSettings>

    <!--To do OSGI invocations to OAuth2Service,when the entire server is in one JVM -->
    <SeparateBackEnd>false</SeparateBackEnd>
</Server>
