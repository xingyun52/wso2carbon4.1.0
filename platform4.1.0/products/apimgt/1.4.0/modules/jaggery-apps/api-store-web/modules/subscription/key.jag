<%
var generateAPIKey = function (api, context, application, username, keyType, callbackUrl) {
    var key,
            log = new Log(),
            store = jagg.module("manager").getAPIStoreObj();

    try {
        key = store.getKey(api.provider, api.name, api.version, context, application, username, keyType, callbackUrl);
        if (log.isDebugEnabled()) {
            log.debug("generateAPIKey");
        }
        return {
            error:false,
            key:key
        };
    } catch (e) {
        log.error(e.message);
        return {
            error:e,
            key:null
        };
    }
};
var generateApplicationKey = function (application, username, keyType, callbackUrl, accessAllowDomains) {
    var key,
            log = new Log(),
            store = jagg.module("manager").getAPIStoreObj();

    try {
        key = store.getApplicationKey( username,application, keyType, callbackUrl, accessAllowDomains);
        if (log.isDebugEnabled()) {
            log.debug("generateAPIKey");
        }
        return {
            error:false,
            key:key
        };
    } catch (e) {
        log.error(e.message);
        return {
            error:e,
            key:null
        };
    }
};

var refreshToken = function (username,application, keyType ,oldAccessToken, accessAllowDomains) {
    var key,
            log = new Log(),
            store = jagg.module("manager").getAPIStoreObj();

    try {
        key = store.refreshToken( username,application, keyType,oldAccessToken, accessAllowDomains);
        if (log.isDebugEnabled()) {
            log.debug("generateAPIKey");
        }
        return {
            error:false,
            key:key
        };
    } catch (e) {
        log.error(e.message);
        return {
            error:e,
            key:null,
            message:e.message.split("Exception:")[1]
        };
    }
};
%>
