<%
var getAPI = function (api) {
    var api, result,
            log = new Log(),
            provider = jagg.module("manager").getAPIProviderObj();
    try {
        result = provider.getAPI(api.provider, api.name, api.version);
        if (log.isDebugEnabled()) {
            log.debug("getAPI : " + stringify(result));
        }
        api = {
            name:result[0],
            version:result[4],
            provider:api.provider,
            description:result[1],
            endpoint:result[2],
            wsdl:result[3],
            tags:result[5],
            availableTiers:result[6],
            status:result[7],
            thumb:result[8],
            context:result[9],
            lastUpdated:result[10],
            subs:result[11],
            templates:result[12],
            sandbox:result[13],
            tierDescs:result[14],
            bizOwner:result[15],
            bizOwnerMail:result[16],
            techOwner:result[17],
            techOwnerMail:result[18],
            wadl:result[19],
            visibility:result[20],
            roles:result[21],
            epUsername:result[22],
            epPassword:result[23],
            endpointTypeSecured:result[24]
        };
        return {
            error:false,
            api:api
        };
    } catch (e) {
        log.error(e.message);
        return {
            error:e,
            api:null,
            message:e.message.split(":")[1]
        };
    }
};

var getAPIsByProvider = function (username) {
    var i, length, api, apis,
            list = [],
            log = new Log(),
            provider = jagg.module("manager").getAPIProviderObj();

    try {
        apis = provider.getAPIsByProvider(username);
        if (log.isDebugEnabled()) {
            log.debug("getAPIsByProvider : " + stringify(apis));
        }
        length = apis.length;
        for (i = 0; i < length; i++) {
            api = apis[i];
            list.push({
                name:api.apiName,
                version:api.version,
                provider:api.provider,
                lastUpdatedDate:api.updatedDate
            });
        }
        return {
            error:false,
            apis:list
        };

    } catch (e) {
        log.error(e.message);
        return {
            error:e,
            apis:null,
            message:e.message.split(":")[1]
        };
    }
};

var getAllAPIs = function () {
    var i, length, api, apis,
    list = [],
    log = new Log(),
    provider = jagg.module("manager").getAPIProviderObj();

    try {
        apis = provider.getAllAPIs();
        length = apis.length;
        for (i = 0; i < length; i++) {
            api = apis[i];
            list.push({
                name:api.apiName,
                provider:api.provider,
                version:api.version,
                status:api.status,
                thumb:api.thumb,
                subs:api.subs
            });
        }
        return {
            error:false,
            apis:list
        };

    } catch (e) {
        log.error(e.message);
        return {
            error:e,
            apis:null,
            message:e.message.split(":")[1]
        };
    }
};
%>