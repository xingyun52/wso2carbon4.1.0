/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.wso2.carbon.apimgt.gateway.handlers.security.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class APIKeyValidationInfoDTO implements org.apache.thrift.TBase<APIKeyValidationInfoDTO, APIKeyValidationInfoDTO._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("APIKeyValidationInfoDTO");

  private static final org.apache.thrift.protocol.TField AUTHORIZED_FIELD_DESC = new org.apache.thrift.protocol.TField("authorized", org.apache.thrift.protocol.TType.BOOL, (short)1);
  private static final org.apache.thrift.protocol.TField SUBSCRIBER_FIELD_DESC = new org.apache.thrift.protocol.TField("subscriber", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField TIER_FIELD_DESC = new org.apache.thrift.protocol.TField("tier", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField END_USER_TOKEN_FIELD_DESC = new org.apache.thrift.protocol.TField("endUserToken", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField END_USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("endUserName", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField APPLICATION_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("applicationName", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField VALIDATION_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("validationStatus", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField APPLICATION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("applicationId", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField APPLICATION_TIER_FIELD_DESC = new org.apache.thrift.protocol.TField("applicationTier", org.apache.thrift.protocol.TType.STRING, (short)10);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new APIKeyValidationInfoDTOStandardSchemeFactory());
    schemes.put(TupleScheme.class, new APIKeyValidationInfoDTOTupleSchemeFactory());
  }

  public boolean authorized; // optional
  public String subscriber; // optional
  public String tier; // optional
  public String type; // optional
  public String endUserToken; // optional
  public String endUserName; // optional
  public String applicationName; // optional
  public int validationStatus; // optional
  public String applicationId; // optional
  public String applicationTier; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    AUTHORIZED((short)1, "authorized"),
    SUBSCRIBER((short)2, "subscriber"),
    TIER((short)3, "tier"),
    TYPE((short)4, "type"),
    END_USER_TOKEN((short)5, "endUserToken"),
    END_USER_NAME((short)6, "endUserName"),
    APPLICATION_NAME((short)7, "applicationName"),
    VALIDATION_STATUS((short)8, "validationStatus"),
    APPLICATION_ID((short)9, "applicationId"),
    APPLICATION_TIER((short)10, "applicationTier");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // AUTHORIZED
          return AUTHORIZED;
        case 2: // SUBSCRIBER
          return SUBSCRIBER;
        case 3: // TIER
          return TIER;
        case 4: // TYPE
          return TYPE;
        case 5: // END_USER_TOKEN
          return END_USER_TOKEN;
        case 6: // END_USER_NAME
          return END_USER_NAME;
        case 7: // APPLICATION_NAME
          return APPLICATION_NAME;
        case 8: // VALIDATION_STATUS
          return VALIDATION_STATUS;
        case 9: // APPLICATION_ID
          return APPLICATION_ID;
        case 10: // APPLICATION_TIER
          return APPLICATION_TIER;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __AUTHORIZED_ISSET_ID = 0;
  private static final int __VALIDATIONSTATUS_ISSET_ID = 1;
  private BitSet __isset_bit_vector = new BitSet(2);
  private _Fields optionals[] = {_Fields.AUTHORIZED,_Fields.SUBSCRIBER,_Fields.TIER,_Fields.TYPE,_Fields.END_USER_TOKEN,_Fields.END_USER_NAME,_Fields.APPLICATION_NAME,_Fields.VALIDATION_STATUS,_Fields.APPLICATION_ID,_Fields.APPLICATION_TIER};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.AUTHORIZED, new org.apache.thrift.meta_data.FieldMetaData("authorized", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.SUBSCRIBER, new org.apache.thrift.meta_data.FieldMetaData("subscriber", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TIER, new org.apache.thrift.meta_data.FieldMetaData("tier", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.END_USER_TOKEN, new org.apache.thrift.meta_data.FieldMetaData("endUserToken", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.END_USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("endUserName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPLICATION_NAME, new org.apache.thrift.meta_data.FieldMetaData("applicationName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALIDATION_STATUS, new org.apache.thrift.meta_data.FieldMetaData("validationStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.APPLICATION_ID, new org.apache.thrift.meta_data.FieldMetaData("applicationId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPLICATION_TIER, new org.apache.thrift.meta_data.FieldMetaData("applicationTier", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(APIKeyValidationInfoDTO.class, metaDataMap);
  }

  public APIKeyValidationInfoDTO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public APIKeyValidationInfoDTO(APIKeyValidationInfoDTO other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.authorized = other.authorized;
    if (other.isSetSubscriber()) {
      this.subscriber = other.subscriber;
    }
    if (other.isSetTier()) {
      this.tier = other.tier;
    }
    if (other.isSetType()) {
      this.type = other.type;
    }
    if (other.isSetEndUserToken()) {
      this.endUserToken = other.endUserToken;
    }
    if (other.isSetEndUserName()) {
      this.endUserName = other.endUserName;
    }
    if (other.isSetApplicationName()) {
      this.applicationName = other.applicationName;
    }
    this.validationStatus = other.validationStatus;
    if (other.isSetApplicationId()) {
      this.applicationId = other.applicationId;
    }
    if (other.isSetApplicationTier()) {
      this.applicationTier = other.applicationTier;
    }
  }

  public APIKeyValidationInfoDTO deepCopy() {
    return new APIKeyValidationInfoDTO(this);
  }

  @Override
  public void clear() {
    setAuthorizedIsSet(false);
    this.authorized = false;
    this.subscriber = null;
    this.tier = null;
    this.type = null;
    this.endUserToken = null;
    this.endUserName = null;
    this.applicationName = null;
    setValidationStatusIsSet(false);
    this.validationStatus = 0;
    this.applicationId = null;
    this.applicationTier = null;
  }

  public boolean isAuthorized() {
    return this.authorized;
  }

  public APIKeyValidationInfoDTO setAuthorized(boolean authorized) {
    this.authorized = authorized;
    setAuthorizedIsSet(true);
    return this;
  }

  public void unsetAuthorized() {
    __isset_bit_vector.clear(__AUTHORIZED_ISSET_ID);
  }

  /** Returns true if field authorized is set (has been assigned a value) and false otherwise */
  public boolean isSetAuthorized() {
    return __isset_bit_vector.get(__AUTHORIZED_ISSET_ID);
  }

  public void setAuthorizedIsSet(boolean value) {
    __isset_bit_vector.set(__AUTHORIZED_ISSET_ID, value);
  }

  public String getSubscriber() {
    return this.subscriber;
  }

  public APIKeyValidationInfoDTO setSubscriber(String subscriber) {
    this.subscriber = subscriber;
    return this;
  }

  public void unsetSubscriber() {
    this.subscriber = null;
  }

  /** Returns true if field subscriber is set (has been assigned a value) and false otherwise */
  public boolean isSetSubscriber() {
    return this.subscriber != null;
  }

  public void setSubscriberIsSet(boolean value) {
    if (!value) {
      this.subscriber = null;
    }
  }

  public String getTier() {
    return this.tier;
  }

  public APIKeyValidationInfoDTO setTier(String tier) {
    this.tier = tier;
    return this;
  }

  public void unsetTier() {
    this.tier = null;
  }

  /** Returns true if field tier is set (has been assigned a value) and false otherwise */
  public boolean isSetTier() {
    return this.tier != null;
  }

  public void setTierIsSet(boolean value) {
    if (!value) {
      this.tier = null;
    }
  }

  public String getType() {
    return this.type;
  }

  public APIKeyValidationInfoDTO setType(String type) {
    this.type = type;
    return this;
  }

  public void unsetType() {
    this.type = null;
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return this.type != null;
  }

  public void setTypeIsSet(boolean value) {
    if (!value) {
      this.type = null;
    }
  }

  public String getEndUserToken() {
    return this.endUserToken;
  }

  public APIKeyValidationInfoDTO setEndUserToken(String endUserToken) {
    this.endUserToken = endUserToken;
    return this;
  }

  public void unsetEndUserToken() {
    this.endUserToken = null;
  }

  /** Returns true if field endUserToken is set (has been assigned a value) and false otherwise */
  public boolean isSetEndUserToken() {
    return this.endUserToken != null;
  }

  public void setEndUserTokenIsSet(boolean value) {
    if (!value) {
      this.endUserToken = null;
    }
  }

  public String getEndUserName() {
    return this.endUserName;
  }

  public APIKeyValidationInfoDTO setEndUserName(String endUserName) {
    this.endUserName = endUserName;
    return this;
  }

  public void unsetEndUserName() {
    this.endUserName = null;
  }

  /** Returns true if field endUserName is set (has been assigned a value) and false otherwise */
  public boolean isSetEndUserName() {
    return this.endUserName != null;
  }

  public void setEndUserNameIsSet(boolean value) {
    if (!value) {
      this.endUserName = null;
    }
  }

  public String getApplicationName() {
    return this.applicationName;
  }

  public APIKeyValidationInfoDTO setApplicationName(String applicationName) {
    this.applicationName = applicationName;
    return this;
  }

  public void unsetApplicationName() {
    this.applicationName = null;
  }

  /** Returns true if field applicationName is set (has been assigned a value) and false otherwise */
  public boolean isSetApplicationName() {
    return this.applicationName != null;
  }

  public void setApplicationNameIsSet(boolean value) {
    if (!value) {
      this.applicationName = null;
    }
  }

  public int getValidationStatus() {
    return this.validationStatus;
  }

  public APIKeyValidationInfoDTO setValidationStatus(int validationStatus) {
    this.validationStatus = validationStatus;
    setValidationStatusIsSet(true);
    return this;
  }

  public void unsetValidationStatus() {
    __isset_bit_vector.clear(__VALIDATIONSTATUS_ISSET_ID);
  }

  /** Returns true if field validationStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetValidationStatus() {
    return __isset_bit_vector.get(__VALIDATIONSTATUS_ISSET_ID);
  }

  public void setValidationStatusIsSet(boolean value) {
    __isset_bit_vector.set(__VALIDATIONSTATUS_ISSET_ID, value);
  }

  public String getApplicationId() {
    return this.applicationId;
  }

  public APIKeyValidationInfoDTO setApplicationId(String applicationId) {
    this.applicationId = applicationId;
    return this;
  }

  public void unsetApplicationId() {
    this.applicationId = null;
  }

  /** Returns true if field applicationId is set (has been assigned a value) and false otherwise */
  public boolean isSetApplicationId() {
    return this.applicationId != null;
  }

  public void setApplicationIdIsSet(boolean value) {
    if (!value) {
      this.applicationId = null;
    }
  }

  public String getApplicationTier() {
    return this.applicationTier;
  }

  public APIKeyValidationInfoDTO setApplicationTier(String applicationTier) {
    this.applicationTier = applicationTier;
    return this;
  }

  public void unsetApplicationTier() {
    this.applicationTier = null;
  }

  /** Returns true if field applicationTier is set (has been assigned a value) and false otherwise */
  public boolean isSetApplicationTier() {
    return this.applicationTier != null;
  }

  public void setApplicationTierIsSet(boolean value) {
    if (!value) {
      this.applicationTier = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case AUTHORIZED:
      if (value == null) {
        unsetAuthorized();
      } else {
        setAuthorized((Boolean)value);
      }
      break;

    case SUBSCRIBER:
      if (value == null) {
        unsetSubscriber();
      } else {
        setSubscriber((String)value);
      }
      break;

    case TIER:
      if (value == null) {
        unsetTier();
      } else {
        setTier((String)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((String)value);
      }
      break;

    case END_USER_TOKEN:
      if (value == null) {
        unsetEndUserToken();
      } else {
        setEndUserToken((String)value);
      }
      break;

    case END_USER_NAME:
      if (value == null) {
        unsetEndUserName();
      } else {
        setEndUserName((String)value);
      }
      break;

    case APPLICATION_NAME:
      if (value == null) {
        unsetApplicationName();
      } else {
        setApplicationName((String)value);
      }
      break;

    case VALIDATION_STATUS:
      if (value == null) {
        unsetValidationStatus();
      } else {
        setValidationStatus((Integer)value);
      }
      break;

    case APPLICATION_ID:
      if (value == null) {
        unsetApplicationId();
      } else {
        setApplicationId((String)value);
      }
      break;

    case APPLICATION_TIER:
      if (value == null) {
        unsetApplicationTier();
      } else {
        setApplicationTier((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case AUTHORIZED:
      return Boolean.valueOf(isAuthorized());

    case SUBSCRIBER:
      return getSubscriber();

    case TIER:
      return getTier();

    case TYPE:
      return getType();

    case END_USER_TOKEN:
      return getEndUserToken();

    case END_USER_NAME:
      return getEndUserName();

    case APPLICATION_NAME:
      return getApplicationName();

    case VALIDATION_STATUS:
      return Integer.valueOf(getValidationStatus());

    case APPLICATION_ID:
      return getApplicationId();

    case APPLICATION_TIER:
      return getApplicationTier();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case AUTHORIZED:
      return isSetAuthorized();
    case SUBSCRIBER:
      return isSetSubscriber();
    case TIER:
      return isSetTier();
    case TYPE:
      return isSetType();
    case END_USER_TOKEN:
      return isSetEndUserToken();
    case END_USER_NAME:
      return isSetEndUserName();
    case APPLICATION_NAME:
      return isSetApplicationName();
    case VALIDATION_STATUS:
      return isSetValidationStatus();
    case APPLICATION_ID:
      return isSetApplicationId();
    case APPLICATION_TIER:
      return isSetApplicationTier();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof APIKeyValidationInfoDTO)
      return this.equals((APIKeyValidationInfoDTO)that);
    return false;
  }

  public boolean equals(APIKeyValidationInfoDTO that) {
    if (that == null)
      return false;

    boolean this_present_authorized = true && this.isSetAuthorized();
    boolean that_present_authorized = true && that.isSetAuthorized();
    if (this_present_authorized || that_present_authorized) {
      if (!(this_present_authorized && that_present_authorized))
        return false;
      if (this.authorized != that.authorized)
        return false;
    }

    boolean this_present_subscriber = true && this.isSetSubscriber();
    boolean that_present_subscriber = true && that.isSetSubscriber();
    if (this_present_subscriber || that_present_subscriber) {
      if (!(this_present_subscriber && that_present_subscriber))
        return false;
      if (!this.subscriber.equals(that.subscriber))
        return false;
    }

    boolean this_present_tier = true && this.isSetTier();
    boolean that_present_tier = true && that.isSetTier();
    if (this_present_tier || that_present_tier) {
      if (!(this_present_tier && that_present_tier))
        return false;
      if (!this.tier.equals(that.tier))
        return false;
    }

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (!this.type.equals(that.type))
        return false;
    }

    boolean this_present_endUserToken = true && this.isSetEndUserToken();
    boolean that_present_endUserToken = true && that.isSetEndUserToken();
    if (this_present_endUserToken || that_present_endUserToken) {
      if (!(this_present_endUserToken && that_present_endUserToken))
        return false;
      if (!this.endUserToken.equals(that.endUserToken))
        return false;
    }

    boolean this_present_endUserName = true && this.isSetEndUserName();
    boolean that_present_endUserName = true && that.isSetEndUserName();
    if (this_present_endUserName || that_present_endUserName) {
      if (!(this_present_endUserName && that_present_endUserName))
        return false;
      if (!this.endUserName.equals(that.endUserName))
        return false;
    }

    boolean this_present_applicationName = true && this.isSetApplicationName();
    boolean that_present_applicationName = true && that.isSetApplicationName();
    if (this_present_applicationName || that_present_applicationName) {
      if (!(this_present_applicationName && that_present_applicationName))
        return false;
      if (!this.applicationName.equals(that.applicationName))
        return false;
    }

    boolean this_present_validationStatus = true && this.isSetValidationStatus();
    boolean that_present_validationStatus = true && that.isSetValidationStatus();
    if (this_present_validationStatus || that_present_validationStatus) {
      if (!(this_present_validationStatus && that_present_validationStatus))
        return false;
      if (this.validationStatus != that.validationStatus)
        return false;
    }

    boolean this_present_applicationId = true && this.isSetApplicationId();
    boolean that_present_applicationId = true && that.isSetApplicationId();
    if (this_present_applicationId || that_present_applicationId) {
      if (!(this_present_applicationId && that_present_applicationId))
        return false;
      if (!this.applicationId.equals(that.applicationId))
        return false;
    }

    boolean this_present_applicationTier = true && this.isSetApplicationTier();
    boolean that_present_applicationTier = true && that.isSetApplicationTier();
    if (this_present_applicationTier || that_present_applicationTier) {
      if (!(this_present_applicationTier && that_present_applicationTier))
        return false;
      if (!this.applicationTier.equals(that.applicationTier))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(APIKeyValidationInfoDTO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    APIKeyValidationInfoDTO typedOther = (APIKeyValidationInfoDTO)other;

    lastComparison = Boolean.valueOf(isSetAuthorized()).compareTo(typedOther.isSetAuthorized());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthorized()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.authorized, typedOther.authorized);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSubscriber()).compareTo(typedOther.isSetSubscriber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubscriber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.subscriber, typedOther.subscriber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTier()).compareTo(typedOther.isSetTier());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTier()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tier, typedOther.tier);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetType()).compareTo(typedOther.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, typedOther.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndUserToken()).compareTo(typedOther.isSetEndUserToken());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndUserToken()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endUserToken, typedOther.endUserToken);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndUserName()).compareTo(typedOther.isSetEndUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndUserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endUserName, typedOther.endUserName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApplicationName()).compareTo(typedOther.isSetApplicationName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplicationName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applicationName, typedOther.applicationName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValidationStatus()).compareTo(typedOther.isSetValidationStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValidationStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.validationStatus, typedOther.validationStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApplicationId()).compareTo(typedOther.isSetApplicationId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplicationId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applicationId, typedOther.applicationId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApplicationTier()).compareTo(typedOther.isSetApplicationTier());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplicationTier()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applicationTier, typedOther.applicationTier);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("APIKeyValidationInfoDTO(");
    boolean first = true;

    if (isSetAuthorized()) {
      sb.append("authorized:");
      sb.append(this.authorized);
      first = false;
    }
    if (isSetSubscriber()) {
      if (!first) sb.append(", ");
      sb.append("subscriber:");
      if (this.subscriber == null) {
        sb.append("null");
      } else {
        sb.append(this.subscriber);
      }
      first = false;
    }
    if (isSetTier()) {
      if (!first) sb.append(", ");
      sb.append("tier:");
      if (this.tier == null) {
        sb.append("null");
      } else {
        sb.append(this.tier);
      }
      first = false;
    }
    if (isSetType()) {
      if (!first) sb.append(", ");
      sb.append("type:");
      if (this.type == null) {
        sb.append("null");
      } else {
        sb.append(this.type);
      }
      first = false;
    }
    if (isSetEndUserToken()) {
      if (!first) sb.append(", ");
      sb.append("endUserToken:");
      if (this.endUserToken == null) {
        sb.append("null");
      } else {
        sb.append(this.endUserToken);
      }
      first = false;
    }
    if (isSetEndUserName()) {
      if (!first) sb.append(", ");
      sb.append("endUserName:");
      if (this.endUserName == null) {
        sb.append("null");
      } else {
        sb.append(this.endUserName);
      }
      first = false;
    }
    if (isSetApplicationName()) {
      if (!first) sb.append(", ");
      sb.append("applicationName:");
      if (this.applicationName == null) {
        sb.append("null");
      } else {
        sb.append(this.applicationName);
      }
      first = false;
    }
    if (isSetValidationStatus()) {
      if (!first) sb.append(", ");
      sb.append("validationStatus:");
      sb.append(this.validationStatus);
      first = false;
    }
    if (isSetApplicationId()) {
      if (!first) sb.append(", ");
      sb.append("applicationId:");
      if (this.applicationId == null) {
        sb.append("null");
      } else {
        sb.append(this.applicationId);
      }
      first = false;
    }
    if (isSetApplicationTier()) {
      if (!first) sb.append(", ");
      sb.append("applicationTier:");
      if (this.applicationTier == null) {
        sb.append("null");
      } else {
        sb.append(this.applicationTier);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bit_vector = new BitSet(1);
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class APIKeyValidationInfoDTOStandardSchemeFactory implements SchemeFactory {
    public APIKeyValidationInfoDTOStandardScheme getScheme() {
      return new APIKeyValidationInfoDTOStandardScheme();
    }
  }

  private static class APIKeyValidationInfoDTOStandardScheme extends StandardScheme<APIKeyValidationInfoDTO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, APIKeyValidationInfoDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // AUTHORIZED
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.authorized = iprot.readBool();
              struct.setAuthorizedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SUBSCRIBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.subscriber = iprot.readString();
              struct.setSubscriberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TIER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.tier = iprot.readString();
              struct.setTierIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.type = iprot.readString();
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // END_USER_TOKEN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.endUserToken = iprot.readString();
              struct.setEndUserTokenIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // END_USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.endUserName = iprot.readString();
              struct.setEndUserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // APPLICATION_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.applicationName = iprot.readString();
              struct.setApplicationNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // VALIDATION_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.validationStatus = iprot.readI32();
              struct.setValidationStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // APPLICATION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.applicationId = iprot.readString();
              struct.setApplicationIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // APPLICATION_TIER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.applicationTier = iprot.readString();
              struct.setApplicationTierIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, APIKeyValidationInfoDTO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetAuthorized()) {
        oprot.writeFieldBegin(AUTHORIZED_FIELD_DESC);
        oprot.writeBool(struct.authorized);
        oprot.writeFieldEnd();
      }
      if (struct.subscriber != null) {
        if (struct.isSetSubscriber()) {
          oprot.writeFieldBegin(SUBSCRIBER_FIELD_DESC);
          oprot.writeString(struct.subscriber);
          oprot.writeFieldEnd();
        }
      }
      if (struct.tier != null) {
        if (struct.isSetTier()) {
          oprot.writeFieldBegin(TIER_FIELD_DESC);
          oprot.writeString(struct.tier);
          oprot.writeFieldEnd();
        }
      }
      if (struct.type != null) {
        if (struct.isSetType()) {
          oprot.writeFieldBegin(TYPE_FIELD_DESC);
          oprot.writeString(struct.type);
          oprot.writeFieldEnd();
        }
      }
      if (struct.endUserToken != null) {
        if (struct.isSetEndUserToken()) {
          oprot.writeFieldBegin(END_USER_TOKEN_FIELD_DESC);
          oprot.writeString(struct.endUserToken);
          oprot.writeFieldEnd();
        }
      }
      if (struct.endUserName != null) {
        if (struct.isSetEndUserName()) {
          oprot.writeFieldBegin(END_USER_NAME_FIELD_DESC);
          oprot.writeString(struct.endUserName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.applicationName != null) {
        if (struct.isSetApplicationName()) {
          oprot.writeFieldBegin(APPLICATION_NAME_FIELD_DESC);
          oprot.writeString(struct.applicationName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetValidationStatus()) {
        oprot.writeFieldBegin(VALIDATION_STATUS_FIELD_DESC);
        oprot.writeI32(struct.validationStatus);
        oprot.writeFieldEnd();
      }
      if (struct.applicationId != null) {
        if (struct.isSetApplicationId()) {
          oprot.writeFieldBegin(APPLICATION_ID_FIELD_DESC);
          oprot.writeString(struct.applicationId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.applicationTier != null) {
        if (struct.isSetApplicationTier()) {
          oprot.writeFieldBegin(APPLICATION_TIER_FIELD_DESC);
          oprot.writeString(struct.applicationTier);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class APIKeyValidationInfoDTOTupleSchemeFactory implements SchemeFactory {
    public APIKeyValidationInfoDTOTupleScheme getScheme() {
      return new APIKeyValidationInfoDTOTupleScheme();
    }
  }

  private static class APIKeyValidationInfoDTOTupleScheme extends TupleScheme<APIKeyValidationInfoDTO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, APIKeyValidationInfoDTO struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetAuthorized()) {
        optionals.set(0);
      }
      if (struct.isSetSubscriber()) {
        optionals.set(1);
      }
      if (struct.isSetTier()) {
        optionals.set(2);
      }
      if (struct.isSetType()) {
        optionals.set(3);
      }
      if (struct.isSetEndUserToken()) {
        optionals.set(4);
      }
      if (struct.isSetEndUserName()) {
        optionals.set(5);
      }
      if (struct.isSetApplicationName()) {
        optionals.set(6);
      }
      if (struct.isSetValidationStatus()) {
        optionals.set(7);
      }
      if (struct.isSetApplicationId()) {
        optionals.set(8);
      }
      if (struct.isSetApplicationTier()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetAuthorized()) {
        oprot.writeBool(struct.authorized);
      }
      if (struct.isSetSubscriber()) {
        oprot.writeString(struct.subscriber);
      }
      if (struct.isSetTier()) {
        oprot.writeString(struct.tier);
      }
      if (struct.isSetType()) {
        oprot.writeString(struct.type);
      }
      if (struct.isSetEndUserToken()) {
        oprot.writeString(struct.endUserToken);
      }
      if (struct.isSetEndUserName()) {
        oprot.writeString(struct.endUserName);
      }
      if (struct.isSetApplicationName()) {
        oprot.writeString(struct.applicationName);
      }
      if (struct.isSetValidationStatus()) {
        oprot.writeI32(struct.validationStatus);
      }
      if (struct.isSetApplicationId()) {
        oprot.writeString(struct.applicationId);
      }
      if (struct.isSetApplicationTier()) {
        oprot.writeString(struct.applicationTier);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, APIKeyValidationInfoDTO struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.authorized = iprot.readBool();
        struct.setAuthorizedIsSet(true);
      }
      if (incoming.get(1)) {
        struct.subscriber = iprot.readString();
        struct.setSubscriberIsSet(true);
      }
      if (incoming.get(2)) {
        struct.tier = iprot.readString();
        struct.setTierIsSet(true);
      }
      if (incoming.get(3)) {
        struct.type = iprot.readString();
        struct.setTypeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.endUserToken = iprot.readString();
        struct.setEndUserTokenIsSet(true);
      }
      if (incoming.get(5)) {
        struct.endUserName = iprot.readString();
        struct.setEndUserNameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.applicationName = iprot.readString();
        struct.setApplicationNameIsSet(true);
      }
      if (incoming.get(7)) {
        struct.validationStatus = iprot.readI32();
        struct.setValidationStatusIsSet(true);
      }
      if (incoming.get(8)) {
        struct.applicationId = iprot.readString();
        struct.setApplicationIdIsSet(true);
      }
      if (incoming.get(9)) {
        struct.applicationTier = iprot.readString();
        struct.setApplicationTierIsSet(true);
      }
    }
  }

}

