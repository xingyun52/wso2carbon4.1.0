<data name="OracleNestedQueryStoredProcService">
   <config>
      <property name="org.wso2.ws.dataservice.driver">oracle.jdbc.driver.OracleDriver</property>
      <property name="org.wso2.ws.dataservice.protocol">jdbc:oracle:thin:@localhost:1521/xe</property>
      <property name="org.wso2.ws.dataservice.user">datauser</property>
      <property name="org.wso2.ws.dataservice.password">wso2</property>
      <property name="org.wso2.ws.dataservice.minpoolsize">2</property>
      <property name="org.wso2.ws.dataservice.maxpoolsize">100</property>
     
   </config>

   <!-- Query to retrieve Customer data with the given ID -->
   <query id="select_customer_query">
      <sql>SELECT customerNumber, customerName, contactLastName, phone, city FROM Customers WHERE customerNumber=?</sql>
      <param name="customerNumber" sqlType="INTEGER" />
      <result element="Customers" rowName="Customer">
         <element name="customerNumber" column="customerNumber" />
         <element name="customerName" column="customerName" />
         <element name="contactLastName" column="contactLastName" />
         <element name="phone" column="phone" />
         <element name="city" column="city" />
      </result>
   </query>
   
   <!-- Nested Query to retrieve Payment/Customer data -->
   <query id="select_payment_query">
      <sql>SELECT customerNumber AS customerNumberDifferentName, checkNumber, paymentDate, amount FROM Payments WHERE customerNumber is NOT NULL</sql>
      <result element="Payments" rowName="Payment">
         <attribute name="customerNumber" column="customerNumberDifferentName" />
         <attribute name="paymentDate" column="paymentDate" />
         <attribute name="amount" column="amount" />
         <element name="checkNumber" column="checkNumber" />
         <call-query href="select_customer_query">
            <with-param name="customerNumber" column="customerNumberDifferentName" />
         </call-query>
      </result>
   </query>

   <operation name="payment_info_op">
      <call-query href="select_payment_query">
      </call-query>
   </operation>
 
   <!-- Nested Query to retrieve Order/Customer data with the given ID -->
   <query id="select_order_query">
      <sql>SELECT * FROM Orders WHERE orderNumber=?</sql>
      <param name="orderNumber" sqlType="INTEGER" />
      <result element="Orders" rowName="Order">
         <attribute name="customerNumber" column="customerNumber" />
         <element name="orderNumber" column="orderNumber" />
         <element name="orderDate" column="orderDate" />
         <element name="requiredDate" column="requiredDate" />
         <element name="shippedDate" column="shippedDate" />
         <element name="status" column="status" />
         <element name="comments" column="comments" />
         <call-query href="select_customer_query">
            <with-param name="customerNumber" query-param="customerNumber" />
         </call-query>
      </result>
   </query>
   
   <!-- Query to retrieve OrderDetails -->
   <query id="select_order_details_query">
      <sql>SELECT * FROM OrderDetails WHERE rownum BETWEEN 1 AND 100</sql>
      <result element="OrderDetails" rowName="OrderDetailsInfo">
         <element name="orderNumber" column="orderNumber" />
         <element name="productCode" column="productCode" />
         <element name="quantityOrdered" column="quantityOrdered" />
         <element name="priceEach" column="priceEach" />
         <element name="orderLineNumber" column="orderLineNumber" />
         <call-query href="select_order_query">
            <with-param name="orderNumber" query-param="orderNumber" />
         </call-query>
      </result>
   </query>
   
   <operation name="order_details_for_date_time_op">
      <call-query href="select_order_details_query">
      </call-query>
   </operation>
   
   <!-- Query for a stored procedure with no params  -->
   <query id="stored_procedure_noparam_query">
      <sql>CALL getCustomerInfo(:result)</sql>
		<param name="result" sqlType="ORACLE_REF_CURSOR" type="OUT" /> 
      <result element="Customers" rowName="Customer">
         <element name="customerNumber" column="customerNumber" />
         <element name="customerName" column="customerName" />
         <element name="contactLastName" column="contactLastName" />
         <element name="phone" column="phone" />
         <element name="city" column="city" />
      </result>
   </query>
   
   <!-- Query for a stored procedure with params - 1 -->
   <query id="stored_procedure_withparam_query1">
      <sql>CALL getCustomerInfoWithIdLastName(:customerNumber,:contactLastName,:result)</sql>
      <param name="customerNumber" sqlType="INTEGER" type="IN"/>
      <param name="contactLastName" sqlType="STRING" type="IN"/>
       <param name="result" sqlType="ORACLE_REF_CURSOR" type="OUT"/>
      <result element="Customers" rowName="Customer">
         <element name="customerNumber" column="customerNumber" />
         <element name="customerName" column="customerName" />
         <element name="contactLastName" column="contactLastName" />
         <element name="phone" column="phone" />
         <element name="city" column="city" />
      </result>
   </query>

   <operation name="stored_procedure_noparam_op">
      <call-query href="stored_procedure_noparam_query">
      </call-query>
   </operation>
   
   <operation name="stored_procedure_withparam_op">
      <call-query href="stored_procedure_withparam_query1">
         <with-param name="customerNumber" query-param="customerNumber" />
         <with-param name="contactLastName" query-param="contactLastName" />
      </call-query>
   </operation>
   
   <!-- Query for a stored procedure with params - 2 -->
   <query id="stored_procedure_withparam_query2">
      <sql>CALL getCustomerInfoWithId(?,:result)</sql>
      <param name="customerNumber" sqlType="INTEGER" type="IN"/>
      <param name="result" sqlType="ORACLE_REF_CURSOR" type="OUT"/>
           
      <result element="Customers" rowName="Customer">
         <element name="customerNumber" column="customerNumber" />
         <element name="customerName" column="customerName" />
         <element name="contactLastName" column="contactLastName" />
         <element name="phone" column="phone" />
         <element name="city" column="city" />
      </result>
   </query>
   
   
   <!-- Nested Query with an inner stored procedure to retrieve Payment/Customer data -->
   <query id="stored_procedure_nested_query1">
      <sql>SELECT customerNumber, checkNumber, paymentDate, amount FROM Payments WHERE customerNumber is NOT NULL</sql>
      <result element="Payments" rowName="Payment">
         <attribute name="customerNumber" column="customerNumber" />
         <attribute name="paymentDate" column="paymentDate" />
         <attribute name="amount" column="amount" />
         <element name="checkNumber" column="checkNumber" />
         <call-query href="stored_procedure_withparam_query2">
            <with-param name="customerNumber" query-param="customerNumber" />
         </call-query>
      </result>
   </query>
   
   <operation name="stored_procedure_nested_for_date_time_op1">
      <call-query href="stored_procedure_nested_query1" />
   </operation>
   
   <!-- Nested Query with a with outer stored proc to retrieve Payment/Customer data -->
   <query id="stored_procedure_nested_query2">
      <sql>CALL getPaymentInfo(?)</sql>
      <param name="result" sqlType="ORACLE_REF_CURSOR" type="OUT"/>
      
      <result element="Payments" rowName="Payment">
         <attribute name="customerNumber" column="customerNumber" />
         <element name="checkNumber" column="checkNumber" />
         <attribute name="paymentDate" column="paymentDate" />
         <attribute name="amount" column="amount" />
         
         <call-query href="select_customer_query">
            <with-param name="customerNumber" query-param="customerNumber" />
         </call-query>
      </result>
   </query>
   
   <operation name="stored_procedure_nested_for_date_time_op2">
      <call-query href="stored_procedure_nested_query2" />
   </operation>
   
   <!-- Nested Query with a with inner and outer stored procs to retrieve Payment/Customer data -->
   <query id="stored_procedure_nested_query3">
      <sql>CALL getPaymentInfo(?)</sql>
      <param name="result" sqlType="ORACLE_REF_CURSOR" type="OUT"/>
      <result element="Payments" rowName="Payment">
         <attribute name="customerNumber" column="customerNumber" />
         <attribute name="paymentDate" column="paymentDate" />
         <attribute name="amount" column="amount" />
         <element name="checkNumber" column="checkNumber" />
         <call-query href="stored_procedure_withparam_query2">
            <with-param name="customerNumber" query-param="customerNumber" />
         </call-query>
      </result>
   </query>
   
   <operation name="stored_procedure_nested_for_date_time_op3">
      <call-query href="stored_procedure_nested_query3" />
   </operation>
   
   <!-- Query for a stored function with no params  -->
   <query id="stored_func_noparam_query">
      <sql>SELECT getAverageCreditLimit() averageCreditLimit FROM Customers</sql>

      <result element="CreditLimit" rowName="AverageCreditLimit">
         <element name="value" column="averageCreditLimit" />
      </result>
   </query>
   
   <operation name="stored_func_noparam_op">
      <call-query href="stored_func_noparam_query" />
   </operation>
   
   <!-- Query for a stored function with params  -->
   <query id="stored_func_withparam_query">
      <sql>SELECT getCustomerPhoneNumber(?) phoneNumber FROM Customers</sql>
      <param name="customerNumber" sqlType="INTEGER" />
      <result element="Customer" rowName="Phone">
         <element name="value" column="phoneNumber" />
      </result>
   </query>
 
   <operation name="stored_func_withparam_op">
      <call-query href="stored_func_withparam_query">
         <with-param name="customerNumber" query-param="customerNumber" />
      </call-query>
   </operation>
 
   
</data>

