<data name="H2InputMappingService">
   <config>
      <property name="driverClassName">org.h2.Driver</property>
      <property name="url">jdbc:h2:mem:ds-test-db</property>
      <property name="username"></property>
      <property name="password"></property>
      <property name="minIdle">2</property>
      <property name="maxActive">100</property>
   </config>

   <!-- Query and Operation for a SELECT with a DATE and INTEGER input mapping  -->
   <query id="select_input_mappings_query1">
      <sql>SELECT * FROM Orders WHERE orderNumber=? AND orderDate=?</sql>
      <param name="orderNumber" sqlType="INTEGER" />
      <param name="orderDate" sqlType="DATE" />
      <result element="Orders" rowName="Order">
         <attribute name="customerNumber" column="customerNumber" />
         <element name="orderNumber" column="orderNumber" />
         <element name="orderDate" column="orderDate" />
         <element name="requiredDate" column="requiredDate" />
         <element name="shippedDate" column="shippedDate" />
         <element name="status" column="status" />
         <element name="comments" column="comments" />
      </result>
   </query>

   <operation name="select_input_mappings_op1">
      <call-query href="select_input_mappings_query1">
        <with-param name="orderNumber" query-param="orderNumber" />
        <with-param name="orderDate" query-param="orderDate" />
      </call-query>
   </operation>
   
   <!-- Query and Operation for a SELECT with a DOUBLE, INTEGER and STRING input mapping  -->
   <query id="select_input_mappings_query2">
      <sql>SELECT customerNumber, checkNumber, paymentDate, amount FROM Payments WHERE customerNumber=:customerNumber AND checkNumber=:checkNumber AND amount=?</sql>
      <param name="checkNumber" sqlType="STRING" ordinal="2" />
      <param name="amount" sqlType="DOUBLE" ordinal="3" />
      <param name="customerNumber" sqlType="INTEGER" ordinal="1" />      
      <result element="Payments" rowName="Payment">
         <attribute name="customerNumber" column="customerNumber" />
         <attribute name="paymentDate" column="paymentDate" />
         <attribute name="amount" column="amount" />
         <element name="checkNumber" column="checkNumber" />
      </result>
   </query>

   <operation name="select_input_mappings_op2">
      <call-query href="select_input_mappings_query2">
        <with-param name="customerNumber" query-param="customerNumber" />
        <with-param name="checkNumber" query-param="checkNumber" />
        <with-param name="amount" query-param="amount" />
      </call-query>
   </operation>

   <query id="select_input_mappings_merge_query1">
      <sql>SELECT customerNumber, checkNumber, paymentDate, amount FROM Payments WHERE customerNumber=:customerNumber AND paymentDate=:paymentDate</sql>
      <param name="paymentDate" sqlType="DATE"/>
      <param name="customerNumber" sqlType="INTEGER"/>      
      <result element="Payments" rowName="Payment">
         <attribute name="customerNumber" column="customerNumber" />
         <attribute name="paymentDate" column="paymentDate" />
         <attribute name="amount" column="amount" />
         <element name="checkNumber" column="checkNumber" />
      </result>
   </query>
   
   <query id="select_input_mappings_merge_query2">
      <sql>SELECT customerNumber, checkNumber, paymentDate, amount FROM Payments WHERE customerNumber=:customerNumber LIMIT 2</sql>
      <param name="customerNumber" sqlType="INTEGER"/>      
      <result element="Payments" rowName="Payment">
         <attribute name="customerNumber" column="customerNumber" />
         <attribute name="paymentDate" column="paymentDate" />
         <attribute name="amount" column="amount" />
         <element name="checkNumber" column="checkNumber" />
      </result>
   </query>
   
   <operation name="select_input_mappings_merge_op">
      <call-query-group>
         <call-query href="select_input_mappings_merge_query1">
            <with-param name="customerNumber" query-param="customerNumber" />
            <with-param name="paymentDate" query-param="paymentDate"/>
         </call-query>   
         <call-query href="select_input_mappings_merge_query2">
            <with-param name="customerNumber" query-param="customerNumber" />
         </call-query>
      </call-query-group>
   </operation>

   <!-- Input parameters with default values -->
   <query id="select_input_mappings_with_def_value">
      <sql>SELECT customerNumber, checkNumber, paymentDate, amount FROM Payments WHERE customerNumber=:customerNumber LIMIT 2</sql>
      <param name="customerNumber" sqlType="INTEGER" defaultValue="299"/>
      <result element="Payments" rowName="Payment">
         <attribute name="customerNumber" column="customerNumber" />
         <attribute name="paymentDate" column="paymentDate" />
         <attribute name="amount" column="amount" />
         <element name="checkNumber" column="checkNumber" />
      </result>
   </query>

   <operation name="results_with_default_values_op">
      <call-query href="select_input_mappings_with_def_value">
         <with-param name="customerNumber" query-param="customerNumber" />
      </call-query>
   </operation>
   
</data>

